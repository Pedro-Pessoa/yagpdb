// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package discordgo

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
	time "time"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo(in *jlexer.Lexer, out *WebhooksUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo(out *jwriter.Writer, in WebhooksUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WebhooksUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WebhooksUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WebhooksUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WebhooksUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo1(in *jlexer.Lexer, out *VoiceStateUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.VoiceState = new(VoiceState)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64Str())
		case "session_id":
			out.SessionID = string(in.String())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "suppress":
			out.Suppress = bool(in.Bool())
		case "self_mute":
			out.SelfMute = bool(in.Bool())
		case "self_deaf":
			out.SelfDeaf = bool(in.Bool())
		case "mute":
			out.Mute = bool(in.Bool())
		case "deaf":
			out.Deaf = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo1(out *jwriter.Writer, in VoiceStateUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64Str(int64(in.UserID))
	}
	{
		const prefix string = ",\"session_id\":"
		out.RawString(prefix)
		out.String(string(in.SessionID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"suppress\":"
		out.RawString(prefix)
		out.Bool(bool(in.Suppress))
	}
	{
		const prefix string = ",\"self_mute\":"
		out.RawString(prefix)
		out.Bool(bool(in.SelfMute))
	}
	{
		const prefix string = ",\"self_deaf\":"
		out.RawString(prefix)
		out.Bool(bool(in.SelfDeaf))
	}
	{
		const prefix string = ",\"mute\":"
		out.RawString(prefix)
		out.Bool(bool(in.Mute))
	}
	{
		const prefix string = ",\"deaf\":"
		out.RawString(prefix)
		out.Bool(bool(in.Deaf))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v VoiceStateUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v VoiceStateUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *VoiceStateUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *VoiceStateUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo1(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo2(in *jlexer.Lexer, out *VoiceServerUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "token":
			out.Token = string(in.String())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "endpoint":
			out.Endpoint = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo2(out *jwriter.Writer, in VoiceServerUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"token\":"
		out.RawString(prefix[1:])
		out.String(string(in.Token))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"endpoint\":"
		out.RawString(prefix)
		out.String(string(in.Endpoint))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v VoiceServerUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v VoiceServerUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *VoiceServerUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *VoiceServerUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo2(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo3(in *jlexer.Lexer, out *UserUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.User = new(User)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "email":
			out.Email = string(in.String())
		case "username":
			out.Username = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "locale":
			out.Locale = string(in.String())
		case "discriminator":
			out.Discriminator = string(in.String())
		case "token":
			out.Token = string(in.String())
		case "verified":
			out.Verified = bool(in.Bool())
		case "mfa_enabled":
			out.MFAEnabled = bool(in.Bool())
		case "bot":
			out.Bot = bool(in.Bool())
		case "public_flags":
			out.PublicFlags = UserFlags(in.Int())
		case "premium_type":
			out.PremiumType = int(in.Int())
		case "system":
			out.System = bool(in.Bool())
		case "flags":
			out.Flags = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo3(out *jwriter.Writer, in UserUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"locale\":"
		out.RawString(prefix)
		out.String(string(in.Locale))
	}
	{
		const prefix string = ",\"discriminator\":"
		out.RawString(prefix)
		out.String(string(in.Discriminator))
	}
	{
		const prefix string = ",\"token\":"
		out.RawString(prefix)
		out.String(string(in.Token))
	}
	{
		const prefix string = ",\"verified\":"
		out.RawString(prefix)
		out.Bool(bool(in.Verified))
	}
	{
		const prefix string = ",\"mfa_enabled\":"
		out.RawString(prefix)
		out.Bool(bool(in.MFAEnabled))
	}
	{
		const prefix string = ",\"bot\":"
		out.RawString(prefix)
		out.Bool(bool(in.Bot))
	}
	{
		const prefix string = ",\"public_flags\":"
		out.RawString(prefix)
		out.Int(int(in.PublicFlags))
	}
	{
		const prefix string = ",\"premium_type\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumType))
	}
	{
		const prefix string = ",\"system\":"
		out.RawString(prefix)
		out.Bool(bool(in.System))
	}
	{
		const prefix string = ",\"flags\":"
		out.RawString(prefix)
		out.Int(int(in.Flags))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo3(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo4(in *jlexer.Lexer, out *UserNoteUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "note":
			out.Note = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo4(out *jwriter.Writer, in UserNoteUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"note\":"
		out.RawString(prefix)
		out.String(string(in.Note))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserNoteUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserNoteUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserNoteUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserNoteUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo4(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo5(in *jlexer.Lexer, out *UserGuildSettingsUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.UserGuildSettings = new(UserGuildSettings)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "suppress_everyone":
			out.SupressEveryone = bool(in.Bool())
		case "muted":
			out.Muted = bool(in.Bool())
		case "mobile_push":
			out.MobilePush = bool(in.Bool())
		case "message_notifications":
			out.MessageNotifications = int(in.Int())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "channel_overrides":
			if in.IsNull() {
				in.Skip()
				out.ChannelOverrides = nil
			} else {
				in.Delim('[')
				if out.ChannelOverrides == nil {
					if !in.IsDelim(']') {
						out.ChannelOverrides = make([]*UserGuildSettingsChannelOverride, 0, 8)
					} else {
						out.ChannelOverrides = []*UserGuildSettingsChannelOverride{}
					}
				} else {
					out.ChannelOverrides = (out.ChannelOverrides)[:0]
				}
				for !in.IsDelim(']') {
					var v1 *UserGuildSettingsChannelOverride
					if in.IsNull() {
						in.Skip()
						v1 = nil
					} else {
						if v1 == nil {
							v1 = new(UserGuildSettingsChannelOverride)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo6(in, v1)
					}
					out.ChannelOverrides = append(out.ChannelOverrides, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo5(out *jwriter.Writer, in UserGuildSettingsUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"suppress_everyone\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.SupressEveryone))
	}
	{
		const prefix string = ",\"muted\":"
		out.RawString(prefix)
		out.Bool(bool(in.Muted))
	}
	{
		const prefix string = ",\"mobile_push\":"
		out.RawString(prefix)
		out.Bool(bool(in.MobilePush))
	}
	{
		const prefix string = ",\"message_notifications\":"
		out.RawString(prefix)
		out.Int(int(in.MessageNotifications))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"channel_overrides\":"
		out.RawString(prefix)
		if in.ChannelOverrides == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.ChannelOverrides {
				if v2 > 0 {
					out.RawByte(',')
				}
				if v3 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo6(out, *v3)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserGuildSettingsUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserGuildSettingsUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserGuildSettingsUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserGuildSettingsUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo5(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo6(in *jlexer.Lexer, out *UserGuildSettingsChannelOverride) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "muted":
			out.Muted = bool(in.Bool())
		case "message_notifications":
			out.MessageNotifications = int(in.Int())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo6(out *jwriter.Writer, in UserGuildSettingsChannelOverride) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"muted\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Muted))
	}
	{
		const prefix string = ",\"message_notifications\":"
		out.RawString(prefix)
		out.Int(int(in.MessageNotifications))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo7(in *jlexer.Lexer, out *TypingStart) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64Str())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "timestamp":
			out.Timestamp = int(in.Int())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo7(out *jwriter.Writer, in TypingStart) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.UserID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.Int(int(in.Timestamp))
	}
	if in.GuildID != 0 {
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TypingStart) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TypingStart) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TypingStart) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TypingStart) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo7(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo8(in *jlexer.Lexer, out *Resumed) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "_trace":
			if in.IsNull() {
				in.Skip()
				out.Trace = nil
			} else {
				in.Delim('[')
				if out.Trace == nil {
					if !in.IsDelim(']') {
						out.Trace = make([]string, 0, 4)
					} else {
						out.Trace = []string{}
					}
				} else {
					out.Trace = (out.Trace)[:0]
				}
				for !in.IsDelim(']') {
					var v4 string
					v4 = string(in.String())
					out.Trace = append(out.Trace, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo8(out *jwriter.Writer, in Resumed) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"_trace\":"
		out.RawString(prefix[1:])
		if in.Trace == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Trace {
				if v5 > 0 {
					out.RawByte(',')
				}
				out.String(string(v6))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Resumed) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Resumed) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Resumed) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Resumed) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo8(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo9(in *jlexer.Lexer, out *RelationshipRemove) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Relationship = new(Relationship)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "type":
			out.Type = int(in.Int())
		case "id":
			out.ID = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo9(out *jwriter.Writer, in RelationshipRemove) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.ID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RelationshipRemove) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RelationshipRemove) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RelationshipRemove) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RelationshipRemove) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo9(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in *jlexer.Lexer, out *User) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "email":
			out.Email = string(in.String())
		case "username":
			out.Username = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "locale":
			out.Locale = string(in.String())
		case "discriminator":
			out.Discriminator = string(in.String())
		case "token":
			out.Token = string(in.String())
		case "verified":
			out.Verified = bool(in.Bool())
		case "mfa_enabled":
			out.MFAEnabled = bool(in.Bool())
		case "bot":
			out.Bot = bool(in.Bool())
		case "public_flags":
			out.PublicFlags = UserFlags(in.Int())
		case "premium_type":
			out.PremiumType = int(in.Int())
		case "system":
			out.System = bool(in.Bool())
		case "flags":
			out.Flags = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out *jwriter.Writer, in User) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"locale\":"
		out.RawString(prefix)
		out.String(string(in.Locale))
	}
	{
		const prefix string = ",\"discriminator\":"
		out.RawString(prefix)
		out.String(string(in.Discriminator))
	}
	{
		const prefix string = ",\"token\":"
		out.RawString(prefix)
		out.String(string(in.Token))
	}
	{
		const prefix string = ",\"verified\":"
		out.RawString(prefix)
		out.Bool(bool(in.Verified))
	}
	{
		const prefix string = ",\"mfa_enabled\":"
		out.RawString(prefix)
		out.Bool(bool(in.MFAEnabled))
	}
	{
		const prefix string = ",\"bot\":"
		out.RawString(prefix)
		out.Bool(bool(in.Bot))
	}
	{
		const prefix string = ",\"public_flags\":"
		out.RawString(prefix)
		out.Int(int(in.PublicFlags))
	}
	{
		const prefix string = ",\"premium_type\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumType))
	}
	{
		const prefix string = ",\"system\":"
		out.RawString(prefix)
		out.Bool(bool(in.System))
	}
	{
		const prefix string = ",\"flags\":"
		out.RawString(prefix)
		out.Int(int(in.Flags))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo11(in *jlexer.Lexer, out *RelationshipAdd) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Relationship = new(Relationship)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "type":
			out.Type = int(in.Int())
		case "id":
			out.ID = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo11(out *jwriter.Writer, in RelationshipAdd) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.ID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RelationshipAdd) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RelationshipAdd) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RelationshipAdd) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RelationshipAdd) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo11(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo12(in *jlexer.Lexer, out *Ready) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "v":
			out.Version = int(in.Int())
		case "session_id":
			out.SessionID = string(in.String())
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(SelfUser)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo13(in, out.User)
			}
		case "read_state":
			if in.IsNull() {
				in.Skip()
				out.ReadState = nil
			} else {
				in.Delim('[')
				if out.ReadState == nil {
					if !in.IsDelim(']') {
						out.ReadState = make([]*ReadState, 0, 8)
					} else {
						out.ReadState = []*ReadState{}
					}
				} else {
					out.ReadState = (out.ReadState)[:0]
				}
				for !in.IsDelim(']') {
					var v7 *ReadState
					if in.IsNull() {
						in.Skip()
						v7 = nil
					} else {
						if v7 == nil {
							v7 = new(ReadState)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo14(in, v7)
					}
					out.ReadState = append(out.ReadState, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "private_channels":
			if in.IsNull() {
				in.Skip()
				out.PrivateChannels = nil
			} else {
				in.Delim('[')
				if out.PrivateChannels == nil {
					if !in.IsDelim(']') {
						out.PrivateChannels = make([]*Channel, 0, 8)
					} else {
						out.PrivateChannels = []*Channel{}
					}
				} else {
					out.PrivateChannels = (out.PrivateChannels)[:0]
				}
				for !in.IsDelim(']') {
					var v8 *Channel
					if in.IsNull() {
						in.Skip()
						v8 = nil
					} else {
						if v8 == nil {
							v8 = new(Channel)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo15(in, v8)
					}
					out.PrivateChannels = append(out.PrivateChannels, v8)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "guilds":
			if in.IsNull() {
				in.Skip()
				out.Guilds = nil
			} else {
				in.Delim('[')
				if out.Guilds == nil {
					if !in.IsDelim(']') {
						out.Guilds = make([]*Guild, 0, 8)
					} else {
						out.Guilds = []*Guild{}
					}
				} else {
					out.Guilds = (out.Guilds)[:0]
				}
				for !in.IsDelim(']') {
					var v9 *Guild
					if in.IsNull() {
						in.Skip()
						v9 = nil
					} else {
						if v9 == nil {
							v9 = new(Guild)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo16(in, v9)
					}
					out.Guilds = append(out.Guilds, v9)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "user_settings":
			if in.IsNull() {
				in.Skip()
				out.Settings = nil
			} else {
				if out.Settings == nil {
					out.Settings = new(Settings)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo17(in, out.Settings)
			}
		case "user_guild_settings":
			if in.IsNull() {
				in.Skip()
				out.UserGuildSettings = nil
			} else {
				in.Delim('[')
				if out.UserGuildSettings == nil {
					if !in.IsDelim(']') {
						out.UserGuildSettings = make([]*UserGuildSettings, 0, 8)
					} else {
						out.UserGuildSettings = []*UserGuildSettings{}
					}
				} else {
					out.UserGuildSettings = (out.UserGuildSettings)[:0]
				}
				for !in.IsDelim(']') {
					var v10 *UserGuildSettings
					if in.IsNull() {
						in.Skip()
						v10 = nil
					} else {
						if v10 == nil {
							v10 = new(UserGuildSettings)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo18(in, v10)
					}
					out.UserGuildSettings = append(out.UserGuildSettings, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "relationships":
			if in.IsNull() {
				in.Skip()
				out.Relationships = nil
			} else {
				in.Delim('[')
				if out.Relationships == nil {
					if !in.IsDelim(']') {
						out.Relationships = make([]*Relationship, 0, 8)
					} else {
						out.Relationships = []*Relationship{}
					}
				} else {
					out.Relationships = (out.Relationships)[:0]
				}
				for !in.IsDelim(']') {
					var v11 *Relationship
					if in.IsNull() {
						in.Skip()
						v11 = nil
					} else {
						if v11 == nil {
							v11 = new(Relationship)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo19(in, v11)
					}
					out.Relationships = append(out.Relationships, v11)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "presences":
			if in.IsNull() {
				in.Skip()
				out.Presences = nil
			} else {
				in.Delim('[')
				if out.Presences == nil {
					if !in.IsDelim(']') {
						out.Presences = make([]*Presence, 0, 8)
					} else {
						out.Presences = []*Presence{}
					}
				} else {
					out.Presences = (out.Presences)[:0]
				}
				for !in.IsDelim(']') {
					var v12 *Presence
					if in.IsNull() {
						in.Skip()
						v12 = nil
					} else {
						if v12 == nil {
							v12 = new(Presence)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo20(in, v12)
					}
					out.Presences = append(out.Presences, v12)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "notes":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Notes = make(map[string]string)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v13 string
					v13 = string(in.String())
					(out.Notes)[key] = v13
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo12(out *jwriter.Writer, in Ready) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"v\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Version))
	}
	{
		const prefix string = ",\"session_id\":"
		out.RawString(prefix)
		out.String(string(in.SessionID))
	}
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix)
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo13(out, *in.User)
		}
	}
	{
		const prefix string = ",\"read_state\":"
		out.RawString(prefix)
		if in.ReadState == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v14, v15 := range in.ReadState {
				if v14 > 0 {
					out.RawByte(',')
				}
				if v15 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo14(out, *v15)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"private_channels\":"
		out.RawString(prefix)
		if in.PrivateChannels == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v16, v17 := range in.PrivateChannels {
				if v16 > 0 {
					out.RawByte(',')
				}
				if v17 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo15(out, *v17)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"guilds\":"
		out.RawString(prefix)
		if in.Guilds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v18, v19 := range in.Guilds {
				if v18 > 0 {
					out.RawByte(',')
				}
				if v19 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo16(out, *v19)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"user_settings\":"
		out.RawString(prefix)
		if in.Settings == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo17(out, *in.Settings)
		}
	}
	{
		const prefix string = ",\"user_guild_settings\":"
		out.RawString(prefix)
		if in.UserGuildSettings == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v20, v21 := range in.UserGuildSettings {
				if v20 > 0 {
					out.RawByte(',')
				}
				if v21 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo18(out, *v21)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"relationships\":"
		out.RawString(prefix)
		if in.Relationships == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v22, v23 := range in.Relationships {
				if v22 > 0 {
					out.RawByte(',')
				}
				if v23 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo19(out, *v23)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"presences\":"
		out.RawString(prefix)
		if in.Presences == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v24, v25 := range in.Presences {
				if v24 > 0 {
					out.RawByte(',')
				}
				if v25 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo20(out, *v25)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"notes\":"
		out.RawString(prefix)
		if in.Notes == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v26First := true
			for v26Name, v26Value := range in.Notes {
				if v26First {
					v26First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v26Name))
				out.RawByte(':')
				out.String(string(v26Value))
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ready) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ready) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ready) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ready) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo12(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo20(in *jlexer.Lexer, out *Presence) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "status":
			out.Status = Status(in.String())
		case "activities":
			if in.IsNull() {
				in.Skip()
				out.Activities = nil
			} else {
				in.Delim('[')
				if out.Activities == nil {
					if !in.IsDelim(']') {
						out.Activities = make([]*Activity, 0, 8)
					} else {
						out.Activities = []*Activity{}
					}
				} else {
					out.Activities = (out.Activities)[:0]
				}
				for !in.IsDelim(']') {
					var v27 *Activity
					if in.IsNull() {
						in.Skip()
						v27 = nil
					} else {
						if v27 == nil {
							v27 = new(Activity)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo21(in, v27)
					}
					out.Activities = append(out.Activities, v27)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "client_status":
			easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo22(in, &out.ClientStatus)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo20(out *jwriter.Writer, in Presence) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"activities\":"
		out.RawString(prefix)
		if in.Activities == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v28, v29 := range in.Activities {
				if v28 > 0 {
					out.RawByte(',')
				}
				if v29 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo21(out, *v29)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"client_status\":"
		out.RawString(prefix)
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo22(out, in.ClientStatus)
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo22(in *jlexer.Lexer, out *ClientStatus) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "desktop":
			out.Desktop = string(in.String())
		case "mobile":
			out.Mobile = string(in.String())
		case "web":
			out.Web = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo22(out *jwriter.Writer, in ClientStatus) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Desktop != "" {
		const prefix string = ",\"desktop\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.Desktop))
	}
	if in.Mobile != "" {
		const prefix string = ",\"mobile\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Mobile))
	}
	if in.Web != "" {
		const prefix string = ",\"web\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Web))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo21(in *jlexer.Lexer, out *Activity) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		case "type":
			out.Type = ActivityType(in.Int())
		case "url":
			out.URL = string(in.String())
		case "created_at":
			out.CreatedAt = int(in.Int())
		case "timestamps":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Timestamps).UnmarshalJSON(data))
			}
		case "application_id":
			out.ApplicationID = int64(in.Int64Str())
		case "details":
			if in.IsNull() {
				in.Skip()
				out.Details = nil
			} else {
				if out.Details == nil {
					out.Details = new(string)
				}
				*out.Details = string(in.String())
			}
		case "state":
			if in.IsNull() {
				in.Skip()
				out.State = nil
			} else {
				if out.State == nil {
					out.State = new(string)
				}
				*out.State = string(in.String())
			}
		case "emoji":
			if in.IsNull() {
				in.Skip()
				out.Emoji = nil
			} else {
				if out.Emoji == nil {
					out.Emoji = new(ActivityEmoji)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo23(in, out.Emoji)
			}
		case "party":
			easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo24(in, &out.Party)
		case "assets":
			easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo25(in, &out.Assets)
		case "secrets":
			easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo26(in, &out.Secrets)
		case "instance":
			out.Instance = bool(in.Bool())
		case "flags":
			out.Flags = ActivityFlags(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo21(out *jwriter.Writer, in Activity) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	if in.URL != "" {
		const prefix string = ",\"url\":"
		out.RawString(prefix)
		out.String(string(in.URL))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Int(int(in.CreatedAt))
	}
	if true {
		const prefix string = ",\"timestamps\":"
		out.RawString(prefix)
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo23(out, in.Timestamps)
	}
	if in.ApplicationID != 0 {
		const prefix string = ",\"application_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ApplicationID))
	}
	if in.Details != nil {
		const prefix string = ",\"details\":"
		out.RawString(prefix)
		out.String(string(*in.Details))
	}
	if in.State != nil {
		const prefix string = ",\"state\":"
		out.RawString(prefix)
		out.String(string(*in.State))
	}
	if in.Emoji != nil {
		const prefix string = ",\"emoji\":"
		out.RawString(prefix)
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo24(out, *in.Emoji)
	}
	if true {
		const prefix string = ",\"party\":"
		out.RawString(prefix)
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo25(out, in.Party)
	}
	if true {
		const prefix string = ",\"assets\":"
		out.RawString(prefix)
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo26(out, in.Assets)
	}
	if true {
		const prefix string = ",\"secrets\":"
		out.RawString(prefix)
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo27(out, in.Secrets)
	}
	if in.Instance {
		const prefix string = ",\"instance\":"
		out.RawString(prefix)
		out.Bool(bool(in.Instance))
	}
	if in.Flags != 0 {
		const prefix string = ",\"flags\":"
		out.RawString(prefix)
		out.Int(int(in.Flags))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo27(in *jlexer.Lexer, out *TimeStamps) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "end":
			out.EndTimestamp = int64(in.Int64())
		case "start":
			out.StartTimestamp = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo23(out *jwriter.Writer, in TimeStamps) {
	out.RawByte('{')
	first := true
	_ = first
	if in.EndTimestamp != 0 {
		const prefix string = ",\"end\":"
		first = false
		out.RawString(prefix[1:])
		out.Int64(int64(in.EndTimestamp))
	}
	if in.StartTimestamp != 0 {
		const prefix string = ",\"start\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.StartTimestamp))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo26(in *jlexer.Lexer, out *ActivitySecrets) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "join":
			out.Join = string(in.String())
		case "spectate":
			out.Spectate = string(in.String())
		case "match":
			out.Match = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo27(out *jwriter.Writer, in ActivitySecrets) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Join != "" {
		const prefix string = ",\"join\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.Join))
	}
	if in.Spectate != "" {
		const prefix string = ",\"spectate\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Spectate))
	}
	if in.Match != "" {
		const prefix string = ",\"match\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Match))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo25(in *jlexer.Lexer, out *ActivityAssets) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "large_image":
			out.LargeImage = string(in.String())
		case "large_text":
			out.LargeText = string(in.String())
		case "small_image":
			out.SmallImage = string(in.String())
		case "small_text":
			out.SmallText = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo26(out *jwriter.Writer, in ActivityAssets) {
	out.RawByte('{')
	first := true
	_ = first
	if in.LargeImage != "" {
		const prefix string = ",\"large_image\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.LargeImage))
	}
	if in.LargeText != "" {
		const prefix string = ",\"large_text\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.LargeText))
	}
	if in.SmallImage != "" {
		const prefix string = ",\"small_image\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.SmallImage))
	}
	if in.SmallText != "" {
		const prefix string = ",\"small_text\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.SmallText))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo24(in *jlexer.Lexer, out *ActivityParty) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = string(in.String())
		case "size":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('[')
				v30 := 0
				for !in.IsDelim(']') {
					if v30 < 2 {
						(out.Size)[v30] = int(in.Int())
						v30++
					} else {
						in.SkipRecursive()
					}
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo25(out *jwriter.Writer, in ActivityParty) {
	out.RawByte('{')
	first := true
	_ = first
	if in.ID != "" {
		const prefix string = ",\"id\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.ID))
	}
	if true {
		const prefix string = ",\"size\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.RawByte('[')
		for v31 := range in.Size {
			if v31 > 0 {
				out.RawByte(',')
			}
			out.Int(int((in.Size)[v31]))
		}
		out.RawByte(']')
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo23(in *jlexer.Lexer, out *ActivityEmoji) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		case "id":
			out.ID = int64(in.Int64Str())
		case "animated":
			out.Animated = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo24(out *jwriter.Writer, in ActivityEmoji) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	if in.ID != 0 {
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ID))
	}
	if in.Animated {
		const prefix string = ",\"animated\":"
		out.RawString(prefix)
		out.Bool(bool(in.Animated))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo19(in *jlexer.Lexer, out *Relationship) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "type":
			out.Type = int(in.Int())
		case "id":
			out.ID = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo19(out *jwriter.Writer, in Relationship) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.ID))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo18(in *jlexer.Lexer, out *UserGuildSettings) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "suppress_everyone":
			out.SupressEveryone = bool(in.Bool())
		case "muted":
			out.Muted = bool(in.Bool())
		case "mobile_push":
			out.MobilePush = bool(in.Bool())
		case "message_notifications":
			out.MessageNotifications = int(in.Int())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "channel_overrides":
			if in.IsNull() {
				in.Skip()
				out.ChannelOverrides = nil
			} else {
				in.Delim('[')
				if out.ChannelOverrides == nil {
					if !in.IsDelim(']') {
						out.ChannelOverrides = make([]*UserGuildSettingsChannelOverride, 0, 8)
					} else {
						out.ChannelOverrides = []*UserGuildSettingsChannelOverride{}
					}
				} else {
					out.ChannelOverrides = (out.ChannelOverrides)[:0]
				}
				for !in.IsDelim(']') {
					var v32 *UserGuildSettingsChannelOverride
					if in.IsNull() {
						in.Skip()
						v32 = nil
					} else {
						if v32 == nil {
							v32 = new(UserGuildSettingsChannelOverride)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo6(in, v32)
					}
					out.ChannelOverrides = append(out.ChannelOverrides, v32)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo18(out *jwriter.Writer, in UserGuildSettings) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"suppress_everyone\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.SupressEveryone))
	}
	{
		const prefix string = ",\"muted\":"
		out.RawString(prefix)
		out.Bool(bool(in.Muted))
	}
	{
		const prefix string = ",\"mobile_push\":"
		out.RawString(prefix)
		out.Bool(bool(in.MobilePush))
	}
	{
		const prefix string = ",\"message_notifications\":"
		out.RawString(prefix)
		out.Int(int(in.MessageNotifications))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"channel_overrides\":"
		out.RawString(prefix)
		if in.ChannelOverrides == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v33, v34 := range in.ChannelOverrides {
				if v33 > 0 {
					out.RawByte(',')
				}
				if v34 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo6(out, *v34)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo17(in *jlexer.Lexer, out *Settings) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "render_embeds":
			out.RenderEmbeds = bool(in.Bool())
		case "inline_embed_media":
			out.InlineEmbedMedia = bool(in.Bool())
		case "inline_attachment_media":
			out.InlineAttachmentMedia = bool(in.Bool())
		case "enable_tts_command":
			out.EnableTTSCommand = bool(in.Bool())
		case "message_display_compact":
			out.MessageDisplayCompact = bool(in.Bool())
		case "show_current_game":
			out.ShowCurrentGame = bool(in.Bool())
		case "convert_emoticons":
			out.ConvertEmoticons = bool(in.Bool())
		case "locale":
			out.Locale = string(in.String())
		case "theme":
			out.Theme = string(in.String())
		case "guild_positions":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.GuildPositions).UnmarshalJSON(data))
			}
		case "restricted_guilds":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.RestrictedGuilds).UnmarshalJSON(data))
			}
		case "friend_source_flags":
			if in.IsNull() {
				in.Skip()
				out.FriendSourceFlags = nil
			} else {
				if out.FriendSourceFlags == nil {
					out.FriendSourceFlags = new(FriendSourceFlags)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo28(in, out.FriendSourceFlags)
			}
		case "status":
			out.Status = Status(in.String())
		case "detect_platform_accounts":
			out.DetectPlatformAccounts = bool(in.Bool())
		case "developer_mode":
			out.DeveloperMode = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo17(out *jwriter.Writer, in Settings) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"render_embeds\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.RenderEmbeds))
	}
	{
		const prefix string = ",\"inline_embed_media\":"
		out.RawString(prefix)
		out.Bool(bool(in.InlineEmbedMedia))
	}
	{
		const prefix string = ",\"inline_attachment_media\":"
		out.RawString(prefix)
		out.Bool(bool(in.InlineAttachmentMedia))
	}
	{
		const prefix string = ",\"enable_tts_command\":"
		out.RawString(prefix)
		out.Bool(bool(in.EnableTTSCommand))
	}
	{
		const prefix string = ",\"message_display_compact\":"
		out.RawString(prefix)
		out.Bool(bool(in.MessageDisplayCompact))
	}
	{
		const prefix string = ",\"show_current_game\":"
		out.RawString(prefix)
		out.Bool(bool(in.ShowCurrentGame))
	}
	{
		const prefix string = ",\"convert_emoticons\":"
		out.RawString(prefix)
		out.Bool(bool(in.ConvertEmoticons))
	}
	{
		const prefix string = ",\"locale\":"
		out.RawString(prefix)
		out.String(string(in.Locale))
	}
	{
		const prefix string = ",\"theme\":"
		out.RawString(prefix)
		out.String(string(in.Theme))
	}
	{
		const prefix string = ",\"guild_positions\":"
		out.RawString(prefix)
		out.Raw((in.GuildPositions).MarshalJSON())
	}
	{
		const prefix string = ",\"restricted_guilds\":"
		out.RawString(prefix)
		out.Raw((in.RestrictedGuilds).MarshalJSON())
	}
	{
		const prefix string = ",\"friend_source_flags\":"
		out.RawString(prefix)
		if in.FriendSourceFlags == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo28(out, *in.FriendSourceFlags)
		}
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"detect_platform_accounts\":"
		out.RawString(prefix)
		out.Bool(bool(in.DetectPlatformAccounts))
	}
	{
		const prefix string = ",\"developer_mode\":"
		out.RawString(prefix)
		out.Bool(bool(in.DeveloperMode))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo28(in *jlexer.Lexer, out *FriendSourceFlags) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "all":
			out.All = bool(in.Bool())
		case "mutual_guilds":
			out.MutualGuilds = bool(in.Bool())
		case "mutual_friends":
			out.MutualFriends = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo28(out *jwriter.Writer, in FriendSourceFlags) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"all\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.All))
	}
	{
		const prefix string = ",\"mutual_guilds\":"
		out.RawString(prefix)
		out.Bool(bool(in.MutualGuilds))
	}
	{
		const prefix string = ",\"mutual_friends\":"
		out.RawString(prefix)
		out.Bool(bool(in.MutualFriends))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo16(in *jlexer.Lexer, out *Guild) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "icon":
			out.Icon = string(in.String())
		case "region":
			out.Region = string(in.String())
		case "afk_channel_id":
			out.AfkChannelID = int64(in.Int64Str())
		case "owner_id":
			out.OwnerID = int64(in.Int64Str())
		case "owner":
			out.Owner = bool(in.Bool())
		case "joined_at":
			out.JoinedAt = Timestamp(in.String())
		case "discovery_splash":
			out.DiscoverySplash = string(in.String())
		case "splash":
			out.Splash = string(in.String())
		case "afk_timeout":
			out.AfkTimeout = int(in.Int())
		case "member_count":
			out.MemberCount = int(in.Int())
		case "verification_level":
			out.VerificationLevel = VerificationLevel(in.Int())
		case "large":
			out.Large = bool(in.Bool())
		case "default_message_notifications":
			out.DefaultMessageNotifications = MessageNotifications(in.Int())
		case "roles":
			if in.IsNull() {
				in.Skip()
				out.Roles = nil
			} else {
				in.Delim('[')
				if out.Roles == nil {
					if !in.IsDelim(']') {
						out.Roles = make([]*Role, 0, 8)
					} else {
						out.Roles = []*Role{}
					}
				} else {
					out.Roles = (out.Roles)[:0]
				}
				for !in.IsDelim(']') {
					var v35 *Role
					if in.IsNull() {
						in.Skip()
						v35 = nil
					} else {
						if v35 == nil {
							v35 = new(Role)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo29(in, v35)
					}
					out.Roles = append(out.Roles, v35)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "emojis":
			if in.IsNull() {
				in.Skip()
				out.Emojis = nil
			} else {
				in.Delim('[')
				if out.Emojis == nil {
					if !in.IsDelim(']') {
						out.Emojis = make([]*Emoji, 0, 8)
					} else {
						out.Emojis = []*Emoji{}
					}
				} else {
					out.Emojis = (out.Emojis)[:0]
				}
				for !in.IsDelim(']') {
					var v36 *Emoji
					if in.IsNull() {
						in.Skip()
						v36 = nil
					} else {
						if v36 == nil {
							v36 = new(Emoji)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo30(in, v36)
					}
					out.Emojis = append(out.Emojis, v36)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "members":
			if in.IsNull() {
				in.Skip()
				out.Members = nil
			} else {
				in.Delim('[')
				if out.Members == nil {
					if !in.IsDelim(']') {
						out.Members = make([]*Member, 0, 8)
					} else {
						out.Members = []*Member{}
					}
				} else {
					out.Members = (out.Members)[:0]
				}
				for !in.IsDelim(']') {
					var v37 *Member
					if in.IsNull() {
						in.Skip()
						v37 = nil
					} else {
						if v37 == nil {
							v37 = new(Member)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo31(in, v37)
					}
					out.Members = append(out.Members, v37)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "presences":
			if in.IsNull() {
				in.Skip()
				out.Presences = nil
			} else {
				in.Delim('[')
				if out.Presences == nil {
					if !in.IsDelim(']') {
						out.Presences = make([]*Presence, 0, 8)
					} else {
						out.Presences = []*Presence{}
					}
				} else {
					out.Presences = (out.Presences)[:0]
				}
				for !in.IsDelim(']') {
					var v38 *Presence
					if in.IsNull() {
						in.Skip()
						v38 = nil
					} else {
						if v38 == nil {
							v38 = new(Presence)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo20(in, v38)
					}
					out.Presences = append(out.Presences, v38)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "max_presences":
			out.MaxPresences = int(in.Int())
		case "max_members":
			out.MaxMembers = int(in.Int())
		case "channels":
			if in.IsNull() {
				in.Skip()
				out.Channels = nil
			} else {
				in.Delim('[')
				if out.Channels == nil {
					if !in.IsDelim(']') {
						out.Channels = make([]*Channel, 0, 8)
					} else {
						out.Channels = []*Channel{}
					}
				} else {
					out.Channels = (out.Channels)[:0]
				}
				for !in.IsDelim(']') {
					var v39 *Channel
					if in.IsNull() {
						in.Skip()
						v39 = nil
					} else {
						if v39 == nil {
							v39 = new(Channel)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo15(in, v39)
					}
					out.Channels = append(out.Channels, v39)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "voice_states":
			if in.IsNull() {
				in.Skip()
				out.VoiceStates = nil
			} else {
				in.Delim('[')
				if out.VoiceStates == nil {
					if !in.IsDelim(']') {
						out.VoiceStates = make([]*VoiceState, 0, 8)
					} else {
						out.VoiceStates = []*VoiceState{}
					}
				} else {
					out.VoiceStates = (out.VoiceStates)[:0]
				}
				for !in.IsDelim(']') {
					var v40 *VoiceState
					if in.IsNull() {
						in.Skip()
						v40 = nil
					} else {
						if v40 == nil {
							v40 = new(VoiceState)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo32(in, v40)
					}
					out.VoiceStates = append(out.VoiceStates, v40)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "unavailable":
			out.Unavailable = bool(in.Bool())
		case "explicit_content_filter":
			out.ExplicitContentFilter = ExplicitContentFilterLevel(in.Int())
		case "features":
			if in.IsNull() {
				in.Skip()
				out.Features = nil
			} else {
				in.Delim('[')
				if out.Features == nil {
					if !in.IsDelim(']') {
						out.Features = make([]string, 0, 4)
					} else {
						out.Features = []string{}
					}
				} else {
					out.Features = (out.Features)[:0]
				}
				for !in.IsDelim(']') {
					var v41 string
					v41 = string(in.String())
					out.Features = append(out.Features, v41)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "mfa_level":
			out.MfaLevel = MfaLevel(in.Int())
		case "application_id":
			out.ApplicationID = int64(in.Int64Str())
		case "widget_enabled":
			out.WidgetEnabled = bool(in.Bool())
		case "widget_channel_id":
			out.WidgetChannelID = int64(in.Int64Str())
		case "system_channel_id":
			out.SystemChannelID = int64(in.Int64Str())
		case "system_channel_flags":
			out.SystemChannelFlags = SystemChannelFlag(in.Int())
		case "rules_channel_id":
			out.RulesChannelID = int64(in.Int64Str())
		case "vanity_url_code":
			out.VanityURLCode = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "banner":
			out.Banner = string(in.String())
		case "premium_tier":
			out.PremiumTier = PremiumTier(in.Int())
		case "premium_subscription_count":
			out.PremiumSubscriptionCount = int(in.Int())
		case "preferred_locale":
			out.PreferredLocale = string(in.String())
		case "public_updates_channel_id":
			out.PublicUpdatesChannelID = int64(in.Int64Str())
		case "max_video_channel_users":
			out.MaxVideoChannelUsers = int(in.Int())
		case "approximate_member_count":
			out.ApproximateMemberCount = int(in.Int())
		case "approximate_presence_count":
			out.ApproximatePresenceCount = int(in.Int())
		case "permissions":
			out.Permissions = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo16(out *jwriter.Writer, in Guild) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"icon\":"
		out.RawString(prefix)
		out.String(string(in.Icon))
	}
	{
		const prefix string = ",\"region\":"
		out.RawString(prefix)
		out.String(string(in.Region))
	}
	{
		const prefix string = ",\"afk_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.AfkChannelID))
	}
	{
		const prefix string = ",\"owner_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.OwnerID))
	}
	{
		const prefix string = ",\"owner\":"
		out.RawString(prefix)
		out.Bool(bool(in.Owner))
	}
	{
		const prefix string = ",\"joined_at\":"
		out.RawString(prefix)
		out.String(string(in.JoinedAt))
	}
	{
		const prefix string = ",\"discovery_splash\":"
		out.RawString(prefix)
		out.String(string(in.DiscoverySplash))
	}
	{
		const prefix string = ",\"splash\":"
		out.RawString(prefix)
		out.String(string(in.Splash))
	}
	{
		const prefix string = ",\"afk_timeout\":"
		out.RawString(prefix)
		out.Int(int(in.AfkTimeout))
	}
	{
		const prefix string = ",\"member_count\":"
		out.RawString(prefix)
		out.Int(int(in.MemberCount))
	}
	{
		const prefix string = ",\"verification_level\":"
		out.RawString(prefix)
		out.Int(int(in.VerificationLevel))
	}
	{
		const prefix string = ",\"large\":"
		out.RawString(prefix)
		out.Bool(bool(in.Large))
	}
	{
		const prefix string = ",\"default_message_notifications\":"
		out.RawString(prefix)
		out.Int(int(in.DefaultMessageNotifications))
	}
	{
		const prefix string = ",\"roles\":"
		out.RawString(prefix)
		if in.Roles == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v42, v43 := range in.Roles {
				if v42 > 0 {
					out.RawByte(',')
				}
				if v43 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo29(out, *v43)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"emojis\":"
		out.RawString(prefix)
		if in.Emojis == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v44, v45 := range in.Emojis {
				if v44 > 0 {
					out.RawByte(',')
				}
				if v45 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo30(out, *v45)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"members\":"
		out.RawString(prefix)
		if in.Members == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v46, v47 := range in.Members {
				if v46 > 0 {
					out.RawByte(',')
				}
				if v47 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo31(out, *v47)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"presences\":"
		out.RawString(prefix)
		if in.Presences == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v48, v49 := range in.Presences {
				if v48 > 0 {
					out.RawByte(',')
				}
				if v49 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo20(out, *v49)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"max_presences\":"
		out.RawString(prefix)
		out.Int(int(in.MaxPresences))
	}
	{
		const prefix string = ",\"max_members\":"
		out.RawString(prefix)
		out.Int(int(in.MaxMembers))
	}
	{
		const prefix string = ",\"channels\":"
		out.RawString(prefix)
		if in.Channels == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v50, v51 := range in.Channels {
				if v50 > 0 {
					out.RawByte(',')
				}
				if v51 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo15(out, *v51)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"voice_states\":"
		out.RawString(prefix)
		if in.VoiceStates == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v52, v53 := range in.VoiceStates {
				if v52 > 0 {
					out.RawByte(',')
				}
				if v53 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo32(out, *v53)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"unavailable\":"
		out.RawString(prefix)
		out.Bool(bool(in.Unavailable))
	}
	{
		const prefix string = ",\"explicit_content_filter\":"
		out.RawString(prefix)
		out.Int(int(in.ExplicitContentFilter))
	}
	{
		const prefix string = ",\"features\":"
		out.RawString(prefix)
		if in.Features == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v54, v55 := range in.Features {
				if v54 > 0 {
					out.RawByte(',')
				}
				out.String(string(v55))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"mfa_level\":"
		out.RawString(prefix)
		out.Int(int(in.MfaLevel))
	}
	{
		const prefix string = ",\"application_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ApplicationID))
	}
	{
		const prefix string = ",\"widget_enabled\":"
		out.RawString(prefix)
		out.Bool(bool(in.WidgetEnabled))
	}
	{
		const prefix string = ",\"widget_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.WidgetChannelID))
	}
	{
		const prefix string = ",\"system_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.SystemChannelID))
	}
	{
		const prefix string = ",\"system_channel_flags\":"
		out.RawString(prefix)
		out.Int(int(in.SystemChannelFlags))
	}
	{
		const prefix string = ",\"rules_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.RulesChannelID))
	}
	{
		const prefix string = ",\"vanity_url_code\":"
		out.RawString(prefix)
		out.String(string(in.VanityURLCode))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"banner\":"
		out.RawString(prefix)
		out.String(string(in.Banner))
	}
	{
		const prefix string = ",\"premium_tier\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumTier))
	}
	{
		const prefix string = ",\"premium_subscription_count\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumSubscriptionCount))
	}
	{
		const prefix string = ",\"preferred_locale\":"
		out.RawString(prefix)
		out.String(string(in.PreferredLocale))
	}
	{
		const prefix string = ",\"public_updates_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.PublicUpdatesChannelID))
	}
	{
		const prefix string = ",\"max_video_channel_users\":"
		out.RawString(prefix)
		out.Int(int(in.MaxVideoChannelUsers))
	}
	{
		const prefix string = ",\"approximate_member_count\":"
		out.RawString(prefix)
		out.Int(int(in.ApproximateMemberCount))
	}
	{
		const prefix string = ",\"approximate_presence_count\":"
		out.RawString(prefix)
		out.Int(int(in.ApproximatePresenceCount))
	}
	{
		const prefix string = ",\"permissions\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Permissions))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo32(in *jlexer.Lexer, out *VoiceState) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64Str())
		case "session_id":
			out.SessionID = string(in.String())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "suppress":
			out.Suppress = bool(in.Bool())
		case "self_mute":
			out.SelfMute = bool(in.Bool())
		case "self_deaf":
			out.SelfDeaf = bool(in.Bool())
		case "mute":
			out.Mute = bool(in.Bool())
		case "deaf":
			out.Deaf = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo32(out *jwriter.Writer, in VoiceState) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.UserID))
	}
	{
		const prefix string = ",\"session_id\":"
		out.RawString(prefix)
		out.String(string(in.SessionID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"suppress\":"
		out.RawString(prefix)
		out.Bool(bool(in.Suppress))
	}
	{
		const prefix string = ",\"self_mute\":"
		out.RawString(prefix)
		out.Bool(bool(in.SelfMute))
	}
	{
		const prefix string = ",\"self_deaf\":"
		out.RawString(prefix)
		out.Bool(bool(in.SelfDeaf))
	}
	{
		const prefix string = ",\"mute\":"
		out.RawString(prefix)
		out.Bool(bool(in.Mute))
	}
	{
		const prefix string = ",\"deaf\":"
		out.RawString(prefix)
		out.Bool(bool(in.Deaf))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo31(in *jlexer.Lexer, out *Member) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "joined_at":
			out.JoinedAt = Timestamp(in.String())
		case "nick":
			out.Nick = string(in.String())
		case "deaf":
			out.Deaf = bool(in.Bool())
		case "mute":
			out.Mute = bool(in.Bool())
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "roles":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Roles).UnmarshalJSON(data))
			}
		case "premium_since":
			out.PremiumSince = Timestamp(in.String())
		case "pending":
			out.Pending = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo31(out *jwriter.Writer, in Member) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"joined_at\":"
		out.RawString(prefix)
		out.String(string(in.JoinedAt))
	}
	{
		const prefix string = ",\"nick\":"
		out.RawString(prefix)
		out.String(string(in.Nick))
	}
	{
		const prefix string = ",\"deaf\":"
		out.RawString(prefix)
		out.Bool(bool(in.Deaf))
	}
	{
		const prefix string = ",\"mute\":"
		out.RawString(prefix)
		out.Bool(bool(in.Mute))
	}
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix)
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"roles\":"
		out.RawString(prefix)
		out.Raw((in.Roles).MarshalJSON())
	}
	{
		const prefix string = ",\"premium_since\":"
		out.RawString(prefix)
		out.String(string(in.PremiumSince))
	}
	{
		const prefix string = ",\"pending\":"
		out.RawString(prefix)
		out.Bool(bool(in.Pending))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo30(in *jlexer.Lexer, out *Emoji) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "roles":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Roles).UnmarshalJSON(data))
			}
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "managed":
			out.Managed = bool(in.Bool())
		case "require_colons":
			out.RequireColons = bool(in.Bool())
		case "animated":
			out.Animated = bool(in.Bool())
		case "available":
			out.Available = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo30(out *jwriter.Writer, in Emoji) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"roles\":"
		out.RawString(prefix)
		out.Raw((in.Roles).MarshalJSON())
	}
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix)
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"managed\":"
		out.RawString(prefix)
		out.Bool(bool(in.Managed))
	}
	{
		const prefix string = ",\"require_colons\":"
		out.RawString(prefix)
		out.Bool(bool(in.RequireColons))
	}
	{
		const prefix string = ",\"animated\":"
		out.RawString(prefix)
		out.Bool(bool(in.Animated))
	}
	{
		const prefix string = ",\"available\":"
		out.RawString(prefix)
		out.Bool(bool(in.Available))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo29(in *jlexer.Lexer, out *Role) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "managed":
			out.Managed = bool(in.Bool())
		case "mentionable":
			out.Mentionable = bool(in.Bool())
		case "hoist":
			out.Hoist = bool(in.Bool())
		case "color":
			out.Color = int(in.Int())
		case "position":
			out.Position = int(in.Int())
		case "permissions":
			out.Permissions = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo29(out *jwriter.Writer, in Role) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"managed\":"
		out.RawString(prefix)
		out.Bool(bool(in.Managed))
	}
	{
		const prefix string = ",\"mentionable\":"
		out.RawString(prefix)
		out.Bool(bool(in.Mentionable))
	}
	{
		const prefix string = ",\"hoist\":"
		out.RawString(prefix)
		out.Bool(bool(in.Hoist))
	}
	{
		const prefix string = ",\"color\":"
		out.RawString(prefix)
		out.Int(int(in.Color))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.Int(int(in.Position))
	}
	{
		const prefix string = ",\"permissions\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Permissions))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo15(in *jlexer.Lexer, out *Channel) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "topic":
			out.Topic = string(in.String())
		case "type":
			out.Type = ChannelType(in.Int())
		case "last_message_id":
			out.LastMessageID = int64(in.Int64Str())
		case "last_pin_timestamp":
			out.LastPinTimestamp = Timestamp(in.String())
		case "nsfw":
			out.NSFW = bool(in.Bool())
		case "icon":
			out.Icon = string(in.String())
		case "position":
			out.Position = int(in.Int())
		case "bitrate":
			out.Bitrate = int(in.Int())
		case "recipients":
			if in.IsNull() {
				in.Skip()
				out.Recipients = nil
			} else {
				in.Delim('[')
				if out.Recipients == nil {
					if !in.IsDelim(']') {
						out.Recipients = make([]*User, 0, 8)
					} else {
						out.Recipients = []*User{}
					}
				} else {
					out.Recipients = (out.Recipients)[:0]
				}
				for !in.IsDelim(']') {
					var v56 *User
					if in.IsNull() {
						in.Skip()
						v56 = nil
					} else {
						if v56 == nil {
							v56 = new(User)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, v56)
					}
					out.Recipients = append(out.Recipients, v56)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "permission_overwrites":
			if in.IsNull() {
				in.Skip()
				out.PermissionOverwrites = nil
			} else {
				in.Delim('[')
				if out.PermissionOverwrites == nil {
					if !in.IsDelim(']') {
						out.PermissionOverwrites = make([]*PermissionOverwrite, 0, 8)
					} else {
						out.PermissionOverwrites = []*PermissionOverwrite{}
					}
				} else {
					out.PermissionOverwrites = (out.PermissionOverwrites)[:0]
				}
				for !in.IsDelim(']') {
					var v57 *PermissionOverwrite
					if in.IsNull() {
						in.Skip()
						v57 = nil
					} else {
						if v57 == nil {
							v57 = new(PermissionOverwrite)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo33(in, v57)
					}
					out.PermissionOverwrites = append(out.PermissionOverwrites, v57)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "user_limit":
			out.UserLimit = int(in.Int())
		case "parent_id":
			out.ParentID = int64(in.Int64Str())
		case "rate_limit_per_user":
			out.RateLimitPerUser = int(in.Int())
		case "owner_id":
			out.OwnerID = int64(in.Int64())
		case "application_id":
			out.ApplicationID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo15(out *jwriter.Writer, in Channel) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"topic\":"
		out.RawString(prefix)
		out.String(string(in.Topic))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"last_message_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.LastMessageID))
	}
	{
		const prefix string = ",\"last_pin_timestamp\":"
		out.RawString(prefix)
		out.String(string(in.LastPinTimestamp))
	}
	{
		const prefix string = ",\"nsfw\":"
		out.RawString(prefix)
		out.Bool(bool(in.NSFW))
	}
	{
		const prefix string = ",\"icon\":"
		out.RawString(prefix)
		out.String(string(in.Icon))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.Int(int(in.Position))
	}
	{
		const prefix string = ",\"bitrate\":"
		out.RawString(prefix)
		out.Int(int(in.Bitrate))
	}
	{
		const prefix string = ",\"recipients\":"
		out.RawString(prefix)
		if in.Recipients == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v58, v59 := range in.Recipients {
				if v58 > 0 {
					out.RawByte(',')
				}
				if v59 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *v59)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"permission_overwrites\":"
		out.RawString(prefix)
		if in.PermissionOverwrites == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v60, v61 := range in.PermissionOverwrites {
				if v60 > 0 {
					out.RawByte(',')
				}
				if v61 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo33(out, *v61)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"user_limit\":"
		out.RawString(prefix)
		out.Int(int(in.UserLimit))
	}
	{
		const prefix string = ",\"parent_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ParentID))
	}
	{
		const prefix string = ",\"rate_limit_per_user\":"
		out.RawString(prefix)
		out.Int(int(in.RateLimitPerUser))
	}
	{
		const prefix string = ",\"owner_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.OwnerID))
	}
	{
		const prefix string = ",\"application_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.ApplicationID))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo33(in *jlexer.Lexer, out *PermissionOverwrite) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "type":
			out.Type = PermissionOverwriteType(in.Int())
		case "deny":
			out.Deny = int64(in.Int64Str())
		case "allow":
			out.Allow = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo33(out *jwriter.Writer, in PermissionOverwrite) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"deny\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Deny))
	}
	{
		const prefix string = ",\"allow\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Allow))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo14(in *jlexer.Lexer, out *ReadState) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "mention_count":
			out.MentionCount = int(in.Int())
		case "last_message_id":
			out.LastMessageID = int64(in.Int64Str())
		case "id":
			out.ID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo14(out *jwriter.Writer, in ReadState) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"mention_count\":"
		out.RawString(prefix[1:])
		out.Int(int(in.MentionCount))
	}
	{
		const prefix string = ",\"last_message_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.LastMessageID))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ID))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo13(in *jlexer.Lexer, out *SelfUser) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.User = new(User)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "token":
			out.Token = string(in.String())
		case "id":
			out.ID = int64(in.Int64Str())
		case "email":
			out.Email = string(in.String())
		case "username":
			out.Username = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "locale":
			out.Locale = string(in.String())
		case "discriminator":
			out.Discriminator = string(in.String())
		case "verified":
			out.Verified = bool(in.Bool())
		case "mfa_enabled":
			out.MFAEnabled = bool(in.Bool())
		case "bot":
			out.Bot = bool(in.Bool())
		case "public_flags":
			out.PublicFlags = UserFlags(in.Int())
		case "premium_type":
			out.PremiumType = int(in.Int())
		case "system":
			out.System = bool(in.Bool())
		case "flags":
			out.Flags = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo13(out *jwriter.Writer, in SelfUser) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"token\":"
		out.RawString(prefix[1:])
		out.String(string(in.Token))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"locale\":"
		out.RawString(prefix)
		out.String(string(in.Locale))
	}
	{
		const prefix string = ",\"discriminator\":"
		out.RawString(prefix)
		out.String(string(in.Discriminator))
	}
	{
		const prefix string = ",\"verified\":"
		out.RawString(prefix)
		out.Bool(bool(in.Verified))
	}
	{
		const prefix string = ",\"mfa_enabled\":"
		out.RawString(prefix)
		out.Bool(bool(in.MFAEnabled))
	}
	{
		const prefix string = ",\"bot\":"
		out.RawString(prefix)
		out.Bool(bool(in.Bot))
	}
	{
		const prefix string = ",\"public_flags\":"
		out.RawString(prefix)
		out.Int(int(in.PublicFlags))
	}
	{
		const prefix string = ",\"premium_type\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumType))
	}
	{
		const prefix string = ",\"system\":"
		out.RawString(prefix)
		out.Bool(bool(in.System))
	}
	{
		const prefix string = ",\"flags\":"
		out.RawString(prefix)
		out.Int(int(in.Flags))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo34(in *jlexer.Lexer, out *RateLimit) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.TooManyRequests = new(TooManyRequests)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "URL":
			out.URL = string(in.String())
		case "bucket":
			out.Bucket = string(in.String())
		case "message":
			out.Message = string(in.String())
		case "retry_after":
			out.RetryAfter = time.Duration(in.Int64())
		case "global":
			out.Global = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo34(out *jwriter.Writer, in RateLimit) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"URL\":"
		out.RawString(prefix[1:])
		out.String(string(in.URL))
	}
	{
		const prefix string = ",\"bucket\":"
		out.RawString(prefix)
		out.String(string(in.Bucket))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"retry_after\":"
		out.RawString(prefix)
		out.Int64(int64(in.RetryAfter))
	}
	{
		const prefix string = ",\"global\":"
		out.RawString(prefix)
		out.Bool(bool(in.Global))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RateLimit) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo34(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RateLimit) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo34(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RateLimit) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo34(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RateLimit) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo34(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo35(in *jlexer.Lexer, out *PresenceUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "status":
			out.Status = Status(in.String())
		case "activities":
			if in.IsNull() {
				in.Skip()
				out.Activities = nil
			} else {
				in.Delim('[')
				if out.Activities == nil {
					if !in.IsDelim(']') {
						out.Activities = make([]*Activity, 0, 8)
					} else {
						out.Activities = []*Activity{}
					}
				} else {
					out.Activities = (out.Activities)[:0]
				}
				for !in.IsDelim(']') {
					var v62 *Activity
					if in.IsNull() {
						in.Skip()
						v62 = nil
					} else {
						if v62 == nil {
							v62 = new(Activity)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo21(in, v62)
					}
					out.Activities = append(out.Activities, v62)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "client_status":
			easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo22(in, &out.ClientStatus)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo35(out *jwriter.Writer, in PresenceUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix)
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"activities\":"
		out.RawString(prefix)
		if in.Activities == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v63, v64 := range in.Activities {
				if v63 > 0 {
					out.RawByte(',')
				}
				if v64 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo21(out, *v64)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"client_status\":"
		out.RawString(prefix)
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo22(out, in.ClientStatus)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PresenceUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo35(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PresenceUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo35(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PresenceUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo35(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PresenceUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo35(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo36(in *jlexer.Lexer, out *MessageUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Message = new(Message)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "content":
			out.Content = string(in.String())
		case "timestamp":
			out.Timestamp = Timestamp(in.String())
		case "edited_timestamp":
			out.EditedTimestamp = Timestamp(in.String())
		case "mention_roles":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MentionRoles).UnmarshalJSON(data))
			}
		case "tts":
			out.TTS = bool(in.Bool())
		case "mention_everyone":
			out.MentionEveryone = bool(in.Bool())
		case "author":
			if in.IsNull() {
				in.Skip()
				out.Author = nil
			} else {
				if out.Author == nil {
					out.Author = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.Author)
			}
		case "attachments":
			if in.IsNull() {
				in.Skip()
				out.Attachments = nil
			} else {
				in.Delim('[')
				if out.Attachments == nil {
					if !in.IsDelim(']') {
						out.Attachments = make([]*MessageAttachment, 0, 8)
					} else {
						out.Attachments = []*MessageAttachment{}
					}
				} else {
					out.Attachments = (out.Attachments)[:0]
				}
				for !in.IsDelim(']') {
					var v65 *MessageAttachment
					if in.IsNull() {
						in.Skip()
						v65 = nil
					} else {
						if v65 == nil {
							v65 = new(MessageAttachment)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo37(in, v65)
					}
					out.Attachments = append(out.Attachments, v65)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "embeds":
			if in.IsNull() {
				in.Skip()
				out.Embeds = nil
			} else {
				in.Delim('[')
				if out.Embeds == nil {
					if !in.IsDelim(']') {
						out.Embeds = make([]*MessageEmbed, 0, 8)
					} else {
						out.Embeds = []*MessageEmbed{}
					}
				} else {
					out.Embeds = (out.Embeds)[:0]
				}
				for !in.IsDelim(']') {
					var v66 *MessageEmbed
					if in.IsNull() {
						in.Skip()
						v66 = nil
					} else {
						if v66 == nil {
							v66 = new(MessageEmbed)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo38(in, v66)
					}
					out.Embeds = append(out.Embeds, v66)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "mentions":
			if in.IsNull() {
				in.Skip()
				out.Mentions = nil
			} else {
				in.Delim('[')
				if out.Mentions == nil {
					if !in.IsDelim(']') {
						out.Mentions = make([]*User, 0, 8)
					} else {
						out.Mentions = []*User{}
					}
				} else {
					out.Mentions = (out.Mentions)[:0]
				}
				for !in.IsDelim(']') {
					var v67 *User
					if in.IsNull() {
						in.Skip()
						v67 = nil
					} else {
						if v67 == nil {
							v67 = new(User)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, v67)
					}
					out.Mentions = append(out.Mentions, v67)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "pinned":
			out.Pinned = bool(in.Bool())
		case "reactions":
			if in.IsNull() {
				in.Skip()
				out.Reactions = nil
			} else {
				in.Delim('[')
				if out.Reactions == nil {
					if !in.IsDelim(']') {
						out.Reactions = make([]*MessageReactions, 0, 8)
					} else {
						out.Reactions = []*MessageReactions{}
					}
				} else {
					out.Reactions = (out.Reactions)[:0]
				}
				for !in.IsDelim(']') {
					var v68 *MessageReactions
					if in.IsNull() {
						in.Skip()
						v68 = nil
					} else {
						if v68 == nil {
							v68 = new(MessageReactions)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo39(in, v68)
					}
					out.Reactions = append(out.Reactions, v68)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "type":
			out.Type = MessageType(in.Int())
		case "webhook_id":
			out.WebhookID = int64(in.Int64Str())
		case "member":
			if in.IsNull() {
				in.Skip()
				out.Member = nil
			} else {
				if out.Member == nil {
					out.Member = new(Member)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo31(in, out.Member)
			}
		case "mention_channels":
			if in.IsNull() {
				in.Skip()
				out.MentionChannels = nil
			} else {
				in.Delim('[')
				if out.MentionChannels == nil {
					if !in.IsDelim(']') {
						out.MentionChannels = make([]*Channel, 0, 8)
					} else {
						out.MentionChannels = []*Channel{}
					}
				} else {
					out.MentionChannels = (out.MentionChannels)[:0]
				}
				for !in.IsDelim(']') {
					var v69 *Channel
					if in.IsNull() {
						in.Skip()
						v69 = nil
					} else {
						if v69 == nil {
							v69 = new(Channel)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo15(in, v69)
					}
					out.MentionChannels = append(out.MentionChannels, v69)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "activity":
			if in.IsNull() {
				in.Skip()
				out.Activity = nil
			} else {
				if out.Activity == nil {
					out.Activity = new(MessageActivity)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo40(in, out.Activity)
			}
		case "application":
			if in.IsNull() {
				in.Skip()
				out.Application = nil
			} else {
				if out.Application == nil {
					out.Application = new(MessageApplication)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo41(in, out.Application)
			}
		case "message_reference":
			if in.IsNull() {
				in.Skip()
				out.MessageReference = nil
			} else {
				if out.MessageReference == nil {
					out.MessageReference = new(MessageReference)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo42(in, out.MessageReference)
			}
		case "flags":
			out.Flags = MessageFlags(in.Int())
		case "stickers":
			if in.IsNull() {
				in.Skip()
				out.Stickers = nil
			} else {
				in.Delim('[')
				if out.Stickers == nil {
					if !in.IsDelim(']') {
						out.Stickers = make([]*Sticker, 0, 8)
					} else {
						out.Stickers = []*Sticker{}
					}
				} else {
					out.Stickers = (out.Stickers)[:0]
				}
				for !in.IsDelim(']') {
					var v70 *Sticker
					if in.IsNull() {
						in.Skip()
						v70 = nil
					} else {
						if v70 == nil {
							v70 = new(Sticker)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo43(in, v70)
					}
					out.Stickers = append(out.Stickers, v70)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo36(out *jwriter.Writer, in MessageUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	if in.GuildID != 0 {
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"content\":"
		out.RawString(prefix)
		out.String(string(in.Content))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"edited_timestamp\":"
		out.RawString(prefix)
		out.String(string(in.EditedTimestamp))
	}
	{
		const prefix string = ",\"mention_roles\":"
		out.RawString(prefix)
		out.Raw((in.MentionRoles).MarshalJSON())
	}
	{
		const prefix string = ",\"tts\":"
		out.RawString(prefix)
		out.Bool(bool(in.TTS))
	}
	{
		const prefix string = ",\"mention_everyone\":"
		out.RawString(prefix)
		out.Bool(bool(in.MentionEveryone))
	}
	{
		const prefix string = ",\"author\":"
		out.RawString(prefix)
		if in.Author == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.Author)
		}
	}
	{
		const prefix string = ",\"attachments\":"
		out.RawString(prefix)
		if in.Attachments == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v71, v72 := range in.Attachments {
				if v71 > 0 {
					out.RawByte(',')
				}
				if v72 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo37(out, *v72)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"embeds\":"
		out.RawString(prefix)
		if in.Embeds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v73, v74 := range in.Embeds {
				if v73 > 0 {
					out.RawByte(',')
				}
				if v74 == nil {
					out.RawString("null")
				} else {
					out.Raw((*v74).MarshalJSON())
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"mentions\":"
		out.RawString(prefix)
		if in.Mentions == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v75, v76 := range in.Mentions {
				if v75 > 0 {
					out.RawByte(',')
				}
				if v76 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *v76)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"pinned\":"
		out.RawString(prefix)
		out.Bool(bool(in.Pinned))
	}
	{
		const prefix string = ",\"reactions\":"
		out.RawString(prefix)
		if in.Reactions == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v77, v78 := range in.Reactions {
				if v77 > 0 {
					out.RawByte(',')
				}
				if v78 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo38(out, *v78)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"webhook_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.WebhookID))
	}
	{
		const prefix string = ",\"member\":"
		out.RawString(prefix)
		if in.Member == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo31(out, *in.Member)
		}
	}
	{
		const prefix string = ",\"mention_channels\":"
		out.RawString(prefix)
		if in.MentionChannels == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v79, v80 := range in.MentionChannels {
				if v79 > 0 {
					out.RawByte(',')
				}
				if v80 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo15(out, *v80)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"activity\":"
		out.RawString(prefix)
		if in.Activity == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo39(out, *in.Activity)
		}
	}
	{
		const prefix string = ",\"application\":"
		out.RawString(prefix)
		if in.Application == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo40(out, *in.Application)
		}
	}
	{
		const prefix string = ",\"message_reference\":"
		out.RawString(prefix)
		if in.MessageReference == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo41(out, *in.MessageReference)
		}
	}
	{
		const prefix string = ",\"flags\":"
		out.RawString(prefix)
		out.Int(int(in.Flags))
	}
	{
		const prefix string = ",\"stickers\":"
		out.RawString(prefix)
		if in.Stickers == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v81, v82 := range in.Stickers {
				if v81 > 0 {
					out.RawByte(',')
				}
				if v82 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo42(out, *v82)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MessageUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo36(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MessageUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo36(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MessageUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo36(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MessageUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo36(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo43(in *jlexer.Lexer, out *Sticker) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "pack_id":
			out.PackID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "tags":
			out.Tags = string(in.String())
		case "asset":
			out.Asset = string(in.String())
		case "preview_asset":
			out.PreviewAsset = string(in.String())
		case "format_type":
			out.FormatType = StickerType(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo42(out *jwriter.Writer, in Sticker) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"pack_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.PackID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"tags\":"
		out.RawString(prefix)
		out.String(string(in.Tags))
	}
	{
		const prefix string = ",\"asset\":"
		out.RawString(prefix)
		out.String(string(in.Asset))
	}
	{
		const prefix string = ",\"preview_asset\":"
		out.RawString(prefix)
		out.String(string(in.PreviewAsset))
	}
	{
		const prefix string = ",\"format_type\":"
		out.RawString(prefix)
		out.Int(int(in.FormatType))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo42(in *jlexer.Lexer, out *MessageReference) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "message_id":
			out.MessageID = int64(in.Int64Str())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo41(out *jwriter.Writer, in MessageReference) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"message_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.MessageID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	if in.GuildID != 0 {
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo41(in *jlexer.Lexer, out *MessageApplication) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "cover_image":
			out.CoverImage = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "icon":
			out.Icon = string(in.String())
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo40(out *jwriter.Writer, in MessageApplication) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"cover_image\":"
		out.RawString(prefix)
		out.String(string(in.CoverImage))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"icon\":"
		out.RawString(prefix)
		out.String(string(in.Icon))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo40(in *jlexer.Lexer, out *MessageActivity) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "type":
			out.Type = MessageActivityType(in.Int())
		case "party_id":
			out.PartyID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo39(out *jwriter.Writer, in MessageActivity) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"party_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.PartyID))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo39(in *jlexer.Lexer, out *MessageReactions) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "count":
			out.Count = int(in.Int())
		case "me":
			out.Me = bool(in.Bool())
		case "emoji":
			if in.IsNull() {
				in.Skip()
				out.Emoji = nil
			} else {
				if out.Emoji == nil {
					out.Emoji = new(Emoji)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo30(in, out.Emoji)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo38(out *jwriter.Writer, in MessageReactions) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"count\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Count))
	}
	{
		const prefix string = ",\"me\":"
		out.RawString(prefix)
		out.Bool(bool(in.Me))
	}
	{
		const prefix string = ",\"emoji\":"
		out.RawString(prefix)
		if in.Emoji == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo30(out, *in.Emoji)
		}
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo38(in *jlexer.Lexer, out *MessageEmbed) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.URL = string(in.String())
		case "type":
			out.Type = EmbedType(in.String())
		case "title":
			out.Title = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "color":
			out.Color = int(in.Int())
		case "footer":
			if in.IsNull() {
				in.Skip()
				out.Footer = nil
			} else {
				if out.Footer == nil {
					out.Footer = new(MessageEmbedFooter)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo44(in, out.Footer)
			}
		case "image":
			if in.IsNull() {
				in.Skip()
				out.Image = nil
			} else {
				if out.Image == nil {
					out.Image = new(MessageEmbedImage)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo45(in, out.Image)
			}
		case "thumbnail":
			if in.IsNull() {
				in.Skip()
				out.Thumbnail = nil
			} else {
				if out.Thumbnail == nil {
					out.Thumbnail = new(MessageEmbedThumbnail)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo46(in, out.Thumbnail)
			}
		case "video":
			if in.IsNull() {
				in.Skip()
				out.Video = nil
			} else {
				if out.Video == nil {
					out.Video = new(MessageEmbedVideo)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo47(in, out.Video)
			}
		case "provider":
			if in.IsNull() {
				in.Skip()
				out.Provider = nil
			} else {
				if out.Provider == nil {
					out.Provider = new(MessageEmbedProvider)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo48(in, out.Provider)
			}
		case "author":
			if in.IsNull() {
				in.Skip()
				out.Author = nil
			} else {
				if out.Author == nil {
					out.Author = new(MessageEmbedAuthor)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo49(in, out.Author)
			}
		case "fields":
			if in.IsNull() {
				in.Skip()
				out.Fields = nil
			} else {
				in.Delim('[')
				if out.Fields == nil {
					if !in.IsDelim(']') {
						out.Fields = make([]*MessageEmbedField, 0, 8)
					} else {
						out.Fields = []*MessageEmbedField{}
					}
				} else {
					out.Fields = (out.Fields)[:0]
				}
				for !in.IsDelim(']') {
					var v83 *MessageEmbedField
					if in.IsNull() {
						in.Skip()
						v83 = nil
					} else {
						if v83 == nil {
							v83 = new(MessageEmbedField)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo50(in, v83)
					}
					out.Fields = append(out.Fields, v83)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo43(out *jwriter.Writer, in MessageEmbed) {
	out.RawByte('{')
	first := true
	_ = first
	if in.URL != "" {
		const prefix string = ",\"url\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.URL))
	}
	if in.Type != "" {
		const prefix string = ",\"type\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Type))
	}
	if in.Title != "" {
		const prefix string = ",\"title\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Title))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Description))
	}
	if in.Timestamp != "" {
		const prefix string = ",\"timestamp\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Timestamp))
	}
	if in.Color != 0 {
		const prefix string = ",\"color\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int(int(in.Color))
	}
	if in.Footer != nil {
		const prefix string = ",\"footer\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo44(out, *in.Footer)
	}
	if in.Image != nil {
		const prefix string = ",\"image\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo45(out, *in.Image)
	}
	if in.Thumbnail != nil {
		const prefix string = ",\"thumbnail\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo46(out, *in.Thumbnail)
	}
	if in.Video != nil {
		const prefix string = ",\"video\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo47(out, *in.Video)
	}
	if in.Provider != nil {
		const prefix string = ",\"provider\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo48(out, *in.Provider)
	}
	if in.Author != nil {
		const prefix string = ",\"author\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo49(out, *in.Author)
	}
	if len(in.Fields) != 0 {
		const prefix string = ",\"fields\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		{
			out.RawByte('[')
			for v84, v85 := range in.Fields {
				if v84 > 0 {
					out.RawByte(',')
				}
				if v85 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo50(out, *v85)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo50(in *jlexer.Lexer, out *MessageEmbedField) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		case "value":
			out.Value = string(in.String())
		case "inline":
			out.Inline = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo50(out *jwriter.Writer, in MessageEmbedField) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Name != "" {
		const prefix string = ",\"name\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	if in.Value != "" {
		const prefix string = ",\"value\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Value))
	}
	if in.Inline {
		const prefix string = ",\"inline\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Bool(bool(in.Inline))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo49(in *jlexer.Lexer, out *MessageEmbedAuthor) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.URL = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "icon_url":
			out.IconURL = string(in.String())
		case "proxy_icon_url":
			out.ProxyIconURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo49(out *jwriter.Writer, in MessageEmbedAuthor) {
	out.RawByte('{')
	first := true
	_ = first
	if in.URL != "" {
		const prefix string = ",\"url\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.URL))
	}
	if in.Name != "" {
		const prefix string = ",\"name\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Name))
	}
	if in.IconURL != "" {
		const prefix string = ",\"icon_url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.IconURL))
	}
	if in.ProxyIconURL != "" {
		const prefix string = ",\"proxy_icon_url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.ProxyIconURL))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo48(in *jlexer.Lexer, out *MessageEmbedProvider) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.URL = string(in.String())
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo48(out *jwriter.Writer, in MessageEmbedProvider) {
	out.RawByte('{')
	first := true
	_ = first
	if in.URL != "" {
		const prefix string = ",\"url\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.URL))
	}
	if in.Name != "" {
		const prefix string = ",\"name\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Name))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo47(in *jlexer.Lexer, out *MessageEmbedVideo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.URL = string(in.String())
		case "proxy_url":
			out.ProxyURL = string(in.String())
		case "width":
			out.Width = int(in.Int())
		case "height":
			out.Height = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo47(out *jwriter.Writer, in MessageEmbedVideo) {
	out.RawByte('{')
	first := true
	_ = first
	if in.URL != "" {
		const prefix string = ",\"url\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.URL))
	}
	if in.ProxyURL != "" {
		const prefix string = ",\"proxy_url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.ProxyURL))
	}
	if in.Width != 0 {
		const prefix string = ",\"width\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int(int(in.Width))
	}
	if in.Height != 0 {
		const prefix string = ",\"height\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int(int(in.Height))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo46(in *jlexer.Lexer, out *MessageEmbedThumbnail) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.URL = string(in.String())
		case "proxy_url":
			out.ProxyURL = string(in.String())
		case "width":
			out.Width = int(in.Int())
		case "height":
			out.Height = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo46(out *jwriter.Writer, in MessageEmbedThumbnail) {
	out.RawByte('{')
	first := true
	_ = first
	if in.URL != "" {
		const prefix string = ",\"url\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.URL))
	}
	if in.ProxyURL != "" {
		const prefix string = ",\"proxy_url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.ProxyURL))
	}
	if in.Width != 0 {
		const prefix string = ",\"width\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int(int(in.Width))
	}
	if in.Height != 0 {
		const prefix string = ",\"height\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int(int(in.Height))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo45(in *jlexer.Lexer, out *MessageEmbedImage) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.URL = string(in.String())
		case "proxy_url":
			out.ProxyURL = string(in.String())
		case "width":
			out.Width = int(in.Int())
		case "height":
			out.Height = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo45(out *jwriter.Writer, in MessageEmbedImage) {
	out.RawByte('{')
	first := true
	_ = first
	if in.URL != "" {
		const prefix string = ",\"url\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.URL))
	}
	if in.ProxyURL != "" {
		const prefix string = ",\"proxy_url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.ProxyURL))
	}
	if in.Width != 0 {
		const prefix string = ",\"width\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int(int(in.Width))
	}
	if in.Height != 0 {
		const prefix string = ",\"height\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int(int(in.Height))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo44(in *jlexer.Lexer, out *MessageEmbedFooter) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "text":
			out.Text = string(in.String())
		case "icon_url":
			out.IconURL = string(in.String())
		case "proxy_icon_url":
			out.ProxyIconURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo44(out *jwriter.Writer, in MessageEmbedFooter) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Text != "" {
		const prefix string = ",\"text\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.Text))
	}
	if in.IconURL != "" {
		const prefix string = ",\"icon_url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.IconURL))
	}
	if in.ProxyIconURL != "" {
		const prefix string = ",\"proxy_icon_url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.ProxyIconURL))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo37(in *jlexer.Lexer, out *MessageAttachment) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "filename":
			out.Filename = string(in.String())
		case "size":
			out.Size = int(in.Int())
		case "url":
			out.URL = string(in.String())
		case "proxy_url":
			out.ProxyURL = string(in.String())
		case "height":
			out.Height = int(in.Int())
		case "width":
			out.Width = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo37(out *jwriter.Writer, in MessageAttachment) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"filename\":"
		out.RawString(prefix)
		out.String(string(in.Filename))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.Int(int(in.Size))
	}
	{
		const prefix string = ",\"url\":"
		out.RawString(prefix)
		out.String(string(in.URL))
	}
	{
		const prefix string = ",\"proxy_url\":"
		out.RawString(prefix)
		out.String(string(in.ProxyURL))
	}
	{
		const prefix string = ",\"height\":"
		out.RawString(prefix)
		out.Int(int(in.Height))
	}
	{
		const prefix string = ",\"width\":"
		out.RawString(prefix)
		out.Int(int(in.Width))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo51(in *jlexer.Lexer, out *MessageReactionRemoveAll) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.MessageReaction = new(MessageReaction)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64Str())
		case "message_id":
			out.MessageID = int64(in.Int64Str())
		case "emoji":
			easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo30(in, &out.Emoji)
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo51(out *jwriter.Writer, in MessageReactionRemoveAll) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.UserID))
	}
	{
		const prefix string = ",\"message_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.MessageID))
	}
	{
		const prefix string = ",\"emoji\":"
		out.RawString(prefix)
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo30(out, in.Emoji)
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	if in.GuildID != 0 {
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MessageReactionRemoveAll) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo51(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MessageReactionRemoveAll) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo51(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MessageReactionRemoveAll) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo51(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MessageReactionRemoveAll) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo51(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo52(in *jlexer.Lexer, out *MessageReactionRemove) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.MessageReaction = new(MessageReaction)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64Str())
		case "message_id":
			out.MessageID = int64(in.Int64Str())
		case "emoji":
			easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo30(in, &out.Emoji)
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo52(out *jwriter.Writer, in MessageReactionRemove) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.UserID))
	}
	{
		const prefix string = ",\"message_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.MessageID))
	}
	{
		const prefix string = ",\"emoji\":"
		out.RawString(prefix)
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo30(out, in.Emoji)
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	if in.GuildID != 0 {
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MessageReactionRemove) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo52(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MessageReactionRemove) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo52(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MessageReactionRemove) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo52(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MessageReactionRemove) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo52(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo53(in *jlexer.Lexer, out *MessageReactionAdd) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.MessageReaction = new(MessageReaction)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64Str())
		case "message_id":
			out.MessageID = int64(in.Int64Str())
		case "emoji":
			easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo30(in, &out.Emoji)
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo53(out *jwriter.Writer, in MessageReactionAdd) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.UserID))
	}
	{
		const prefix string = ",\"message_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.MessageID))
	}
	{
		const prefix string = ",\"emoji\":"
		out.RawString(prefix)
		easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo30(out, in.Emoji)
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	if in.GuildID != 0 {
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MessageReactionAdd) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo53(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MessageReactionAdd) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo53(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MessageReactionAdd) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo53(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MessageReactionAdd) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo53(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo54(in *jlexer.Lexer, out *MessageDeleteBulk) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ids":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Messages).UnmarshalJSON(data))
			}
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo54(out *jwriter.Writer, in MessageDeleteBulk) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ids\":"
		out.RawString(prefix[1:])
		out.Raw((in.Messages).MarshalJSON())
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MessageDeleteBulk) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo54(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MessageDeleteBulk) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo54(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MessageDeleteBulk) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo54(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MessageDeleteBulk) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo54(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo55(in *jlexer.Lexer, out *MessageDelete) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Message = new(Message)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "content":
			out.Content = string(in.String())
		case "timestamp":
			out.Timestamp = Timestamp(in.String())
		case "edited_timestamp":
			out.EditedTimestamp = Timestamp(in.String())
		case "mention_roles":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MentionRoles).UnmarshalJSON(data))
			}
		case "tts":
			out.TTS = bool(in.Bool())
		case "mention_everyone":
			out.MentionEveryone = bool(in.Bool())
		case "author":
			if in.IsNull() {
				in.Skip()
				out.Author = nil
			} else {
				if out.Author == nil {
					out.Author = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.Author)
			}
		case "attachments":
			if in.IsNull() {
				in.Skip()
				out.Attachments = nil
			} else {
				in.Delim('[')
				if out.Attachments == nil {
					if !in.IsDelim(']') {
						out.Attachments = make([]*MessageAttachment, 0, 8)
					} else {
						out.Attachments = []*MessageAttachment{}
					}
				} else {
					out.Attachments = (out.Attachments)[:0]
				}
				for !in.IsDelim(']') {
					var v86 *MessageAttachment
					if in.IsNull() {
						in.Skip()
						v86 = nil
					} else {
						if v86 == nil {
							v86 = new(MessageAttachment)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo37(in, v86)
					}
					out.Attachments = append(out.Attachments, v86)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "embeds":
			if in.IsNull() {
				in.Skip()
				out.Embeds = nil
			} else {
				in.Delim('[')
				if out.Embeds == nil {
					if !in.IsDelim(']') {
						out.Embeds = make([]*MessageEmbed, 0, 8)
					} else {
						out.Embeds = []*MessageEmbed{}
					}
				} else {
					out.Embeds = (out.Embeds)[:0]
				}
				for !in.IsDelim(']') {
					var v87 *MessageEmbed
					if in.IsNull() {
						in.Skip()
						v87 = nil
					} else {
						if v87 == nil {
							v87 = new(MessageEmbed)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo38(in, v87)
					}
					out.Embeds = append(out.Embeds, v87)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "mentions":
			if in.IsNull() {
				in.Skip()
				out.Mentions = nil
			} else {
				in.Delim('[')
				if out.Mentions == nil {
					if !in.IsDelim(']') {
						out.Mentions = make([]*User, 0, 8)
					} else {
						out.Mentions = []*User{}
					}
				} else {
					out.Mentions = (out.Mentions)[:0]
				}
				for !in.IsDelim(']') {
					var v88 *User
					if in.IsNull() {
						in.Skip()
						v88 = nil
					} else {
						if v88 == nil {
							v88 = new(User)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, v88)
					}
					out.Mentions = append(out.Mentions, v88)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "pinned":
			out.Pinned = bool(in.Bool())
		case "reactions":
			if in.IsNull() {
				in.Skip()
				out.Reactions = nil
			} else {
				in.Delim('[')
				if out.Reactions == nil {
					if !in.IsDelim(']') {
						out.Reactions = make([]*MessageReactions, 0, 8)
					} else {
						out.Reactions = []*MessageReactions{}
					}
				} else {
					out.Reactions = (out.Reactions)[:0]
				}
				for !in.IsDelim(']') {
					var v89 *MessageReactions
					if in.IsNull() {
						in.Skip()
						v89 = nil
					} else {
						if v89 == nil {
							v89 = new(MessageReactions)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo39(in, v89)
					}
					out.Reactions = append(out.Reactions, v89)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "type":
			out.Type = MessageType(in.Int())
		case "webhook_id":
			out.WebhookID = int64(in.Int64Str())
		case "member":
			if in.IsNull() {
				in.Skip()
				out.Member = nil
			} else {
				if out.Member == nil {
					out.Member = new(Member)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo31(in, out.Member)
			}
		case "mention_channels":
			if in.IsNull() {
				in.Skip()
				out.MentionChannels = nil
			} else {
				in.Delim('[')
				if out.MentionChannels == nil {
					if !in.IsDelim(']') {
						out.MentionChannels = make([]*Channel, 0, 8)
					} else {
						out.MentionChannels = []*Channel{}
					}
				} else {
					out.MentionChannels = (out.MentionChannels)[:0]
				}
				for !in.IsDelim(']') {
					var v90 *Channel
					if in.IsNull() {
						in.Skip()
						v90 = nil
					} else {
						if v90 == nil {
							v90 = new(Channel)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo15(in, v90)
					}
					out.MentionChannels = append(out.MentionChannels, v90)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "activity":
			if in.IsNull() {
				in.Skip()
				out.Activity = nil
			} else {
				if out.Activity == nil {
					out.Activity = new(MessageActivity)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo40(in, out.Activity)
			}
		case "application":
			if in.IsNull() {
				in.Skip()
				out.Application = nil
			} else {
				if out.Application == nil {
					out.Application = new(MessageApplication)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo41(in, out.Application)
			}
		case "message_reference":
			if in.IsNull() {
				in.Skip()
				out.MessageReference = nil
			} else {
				if out.MessageReference == nil {
					out.MessageReference = new(MessageReference)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo42(in, out.MessageReference)
			}
		case "flags":
			out.Flags = MessageFlags(in.Int())
		case "stickers":
			if in.IsNull() {
				in.Skip()
				out.Stickers = nil
			} else {
				in.Delim('[')
				if out.Stickers == nil {
					if !in.IsDelim(']') {
						out.Stickers = make([]*Sticker, 0, 8)
					} else {
						out.Stickers = []*Sticker{}
					}
				} else {
					out.Stickers = (out.Stickers)[:0]
				}
				for !in.IsDelim(']') {
					var v91 *Sticker
					if in.IsNull() {
						in.Skip()
						v91 = nil
					} else {
						if v91 == nil {
							v91 = new(Sticker)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo43(in, v91)
					}
					out.Stickers = append(out.Stickers, v91)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo55(out *jwriter.Writer, in MessageDelete) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	if in.GuildID != 0 {
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"content\":"
		out.RawString(prefix)
		out.String(string(in.Content))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"edited_timestamp\":"
		out.RawString(prefix)
		out.String(string(in.EditedTimestamp))
	}
	{
		const prefix string = ",\"mention_roles\":"
		out.RawString(prefix)
		out.Raw((in.MentionRoles).MarshalJSON())
	}
	{
		const prefix string = ",\"tts\":"
		out.RawString(prefix)
		out.Bool(bool(in.TTS))
	}
	{
		const prefix string = ",\"mention_everyone\":"
		out.RawString(prefix)
		out.Bool(bool(in.MentionEveryone))
	}
	{
		const prefix string = ",\"author\":"
		out.RawString(prefix)
		if in.Author == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.Author)
		}
	}
	{
		const prefix string = ",\"attachments\":"
		out.RawString(prefix)
		if in.Attachments == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v92, v93 := range in.Attachments {
				if v92 > 0 {
					out.RawByte(',')
				}
				if v93 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo37(out, *v93)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"embeds\":"
		out.RawString(prefix)
		if in.Embeds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v94, v95 := range in.Embeds {
				if v94 > 0 {
					out.RawByte(',')
				}
				if v95 == nil {
					out.RawString("null")
				} else {
					out.Raw((*v95).MarshalJSON())
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"mentions\":"
		out.RawString(prefix)
		if in.Mentions == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v96, v97 := range in.Mentions {
				if v96 > 0 {
					out.RawByte(',')
				}
				if v97 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *v97)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"pinned\":"
		out.RawString(prefix)
		out.Bool(bool(in.Pinned))
	}
	{
		const prefix string = ",\"reactions\":"
		out.RawString(prefix)
		if in.Reactions == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v98, v99 := range in.Reactions {
				if v98 > 0 {
					out.RawByte(',')
				}
				if v99 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo38(out, *v99)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"webhook_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.WebhookID))
	}
	{
		const prefix string = ",\"member\":"
		out.RawString(prefix)
		if in.Member == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo31(out, *in.Member)
		}
	}
	{
		const prefix string = ",\"mention_channels\":"
		out.RawString(prefix)
		if in.MentionChannels == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v100, v101 := range in.MentionChannels {
				if v100 > 0 {
					out.RawByte(',')
				}
				if v101 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo15(out, *v101)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"activity\":"
		out.RawString(prefix)
		if in.Activity == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo39(out, *in.Activity)
		}
	}
	{
		const prefix string = ",\"application\":"
		out.RawString(prefix)
		if in.Application == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo40(out, *in.Application)
		}
	}
	{
		const prefix string = ",\"message_reference\":"
		out.RawString(prefix)
		if in.MessageReference == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo41(out, *in.MessageReference)
		}
	}
	{
		const prefix string = ",\"flags\":"
		out.RawString(prefix)
		out.Int(int(in.Flags))
	}
	{
		const prefix string = ",\"stickers\":"
		out.RawString(prefix)
		if in.Stickers == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v102, v103 := range in.Stickers {
				if v102 > 0 {
					out.RawByte(',')
				}
				if v103 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo42(out, *v103)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MessageDelete) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo55(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MessageDelete) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo55(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MessageDelete) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo55(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MessageDelete) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo55(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo56(in *jlexer.Lexer, out *MessageCreate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Message = new(Message)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "content":
			out.Content = string(in.String())
		case "timestamp":
			out.Timestamp = Timestamp(in.String())
		case "edited_timestamp":
			out.EditedTimestamp = Timestamp(in.String())
		case "mention_roles":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MentionRoles).UnmarshalJSON(data))
			}
		case "tts":
			out.TTS = bool(in.Bool())
		case "mention_everyone":
			out.MentionEveryone = bool(in.Bool())
		case "author":
			if in.IsNull() {
				in.Skip()
				out.Author = nil
			} else {
				if out.Author == nil {
					out.Author = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.Author)
			}
		case "attachments":
			if in.IsNull() {
				in.Skip()
				out.Attachments = nil
			} else {
				in.Delim('[')
				if out.Attachments == nil {
					if !in.IsDelim(']') {
						out.Attachments = make([]*MessageAttachment, 0, 8)
					} else {
						out.Attachments = []*MessageAttachment{}
					}
				} else {
					out.Attachments = (out.Attachments)[:0]
				}
				for !in.IsDelim(']') {
					var v104 *MessageAttachment
					if in.IsNull() {
						in.Skip()
						v104 = nil
					} else {
						if v104 == nil {
							v104 = new(MessageAttachment)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo37(in, v104)
					}
					out.Attachments = append(out.Attachments, v104)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "embeds":
			if in.IsNull() {
				in.Skip()
				out.Embeds = nil
			} else {
				in.Delim('[')
				if out.Embeds == nil {
					if !in.IsDelim(']') {
						out.Embeds = make([]*MessageEmbed, 0, 8)
					} else {
						out.Embeds = []*MessageEmbed{}
					}
				} else {
					out.Embeds = (out.Embeds)[:0]
				}
				for !in.IsDelim(']') {
					var v105 *MessageEmbed
					if in.IsNull() {
						in.Skip()
						v105 = nil
					} else {
						if v105 == nil {
							v105 = new(MessageEmbed)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo38(in, v105)
					}
					out.Embeds = append(out.Embeds, v105)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "mentions":
			if in.IsNull() {
				in.Skip()
				out.Mentions = nil
			} else {
				in.Delim('[')
				if out.Mentions == nil {
					if !in.IsDelim(']') {
						out.Mentions = make([]*User, 0, 8)
					} else {
						out.Mentions = []*User{}
					}
				} else {
					out.Mentions = (out.Mentions)[:0]
				}
				for !in.IsDelim(']') {
					var v106 *User
					if in.IsNull() {
						in.Skip()
						v106 = nil
					} else {
						if v106 == nil {
							v106 = new(User)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, v106)
					}
					out.Mentions = append(out.Mentions, v106)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "pinned":
			out.Pinned = bool(in.Bool())
		case "reactions":
			if in.IsNull() {
				in.Skip()
				out.Reactions = nil
			} else {
				in.Delim('[')
				if out.Reactions == nil {
					if !in.IsDelim(']') {
						out.Reactions = make([]*MessageReactions, 0, 8)
					} else {
						out.Reactions = []*MessageReactions{}
					}
				} else {
					out.Reactions = (out.Reactions)[:0]
				}
				for !in.IsDelim(']') {
					var v107 *MessageReactions
					if in.IsNull() {
						in.Skip()
						v107 = nil
					} else {
						if v107 == nil {
							v107 = new(MessageReactions)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo39(in, v107)
					}
					out.Reactions = append(out.Reactions, v107)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "type":
			out.Type = MessageType(in.Int())
		case "webhook_id":
			out.WebhookID = int64(in.Int64Str())
		case "member":
			if in.IsNull() {
				in.Skip()
				out.Member = nil
			} else {
				if out.Member == nil {
					out.Member = new(Member)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo31(in, out.Member)
			}
		case "mention_channels":
			if in.IsNull() {
				in.Skip()
				out.MentionChannels = nil
			} else {
				in.Delim('[')
				if out.MentionChannels == nil {
					if !in.IsDelim(']') {
						out.MentionChannels = make([]*Channel, 0, 8)
					} else {
						out.MentionChannels = []*Channel{}
					}
				} else {
					out.MentionChannels = (out.MentionChannels)[:0]
				}
				for !in.IsDelim(']') {
					var v108 *Channel
					if in.IsNull() {
						in.Skip()
						v108 = nil
					} else {
						if v108 == nil {
							v108 = new(Channel)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo15(in, v108)
					}
					out.MentionChannels = append(out.MentionChannels, v108)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "activity":
			if in.IsNull() {
				in.Skip()
				out.Activity = nil
			} else {
				if out.Activity == nil {
					out.Activity = new(MessageActivity)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo40(in, out.Activity)
			}
		case "application":
			if in.IsNull() {
				in.Skip()
				out.Application = nil
			} else {
				if out.Application == nil {
					out.Application = new(MessageApplication)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo41(in, out.Application)
			}
		case "message_reference":
			if in.IsNull() {
				in.Skip()
				out.MessageReference = nil
			} else {
				if out.MessageReference == nil {
					out.MessageReference = new(MessageReference)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo42(in, out.MessageReference)
			}
		case "flags":
			out.Flags = MessageFlags(in.Int())
		case "stickers":
			if in.IsNull() {
				in.Skip()
				out.Stickers = nil
			} else {
				in.Delim('[')
				if out.Stickers == nil {
					if !in.IsDelim(']') {
						out.Stickers = make([]*Sticker, 0, 8)
					} else {
						out.Stickers = []*Sticker{}
					}
				} else {
					out.Stickers = (out.Stickers)[:0]
				}
				for !in.IsDelim(']') {
					var v109 *Sticker
					if in.IsNull() {
						in.Skip()
						v109 = nil
					} else {
						if v109 == nil {
							v109 = new(Sticker)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo43(in, v109)
					}
					out.Stickers = append(out.Stickers, v109)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo56(out *jwriter.Writer, in MessageCreate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	if in.GuildID != 0 {
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"content\":"
		out.RawString(prefix)
		out.String(string(in.Content))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"edited_timestamp\":"
		out.RawString(prefix)
		out.String(string(in.EditedTimestamp))
	}
	{
		const prefix string = ",\"mention_roles\":"
		out.RawString(prefix)
		out.Raw((in.MentionRoles).MarshalJSON())
	}
	{
		const prefix string = ",\"tts\":"
		out.RawString(prefix)
		out.Bool(bool(in.TTS))
	}
	{
		const prefix string = ",\"mention_everyone\":"
		out.RawString(prefix)
		out.Bool(bool(in.MentionEveryone))
	}
	{
		const prefix string = ",\"author\":"
		out.RawString(prefix)
		if in.Author == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.Author)
		}
	}
	{
		const prefix string = ",\"attachments\":"
		out.RawString(prefix)
		if in.Attachments == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v110, v111 := range in.Attachments {
				if v110 > 0 {
					out.RawByte(',')
				}
				if v111 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo37(out, *v111)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"embeds\":"
		out.RawString(prefix)
		if in.Embeds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v112, v113 := range in.Embeds {
				if v112 > 0 {
					out.RawByte(',')
				}
				if v113 == nil {
					out.RawString("null")
				} else {
					out.Raw((*v113).MarshalJSON())
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"mentions\":"
		out.RawString(prefix)
		if in.Mentions == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v114, v115 := range in.Mentions {
				if v114 > 0 {
					out.RawByte(',')
				}
				if v115 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *v115)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"pinned\":"
		out.RawString(prefix)
		out.Bool(bool(in.Pinned))
	}
	{
		const prefix string = ",\"reactions\":"
		out.RawString(prefix)
		if in.Reactions == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v116, v117 := range in.Reactions {
				if v116 > 0 {
					out.RawByte(',')
				}
				if v117 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo38(out, *v117)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"webhook_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.WebhookID))
	}
	{
		const prefix string = ",\"member\":"
		out.RawString(prefix)
		if in.Member == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo31(out, *in.Member)
		}
	}
	{
		const prefix string = ",\"mention_channels\":"
		out.RawString(prefix)
		if in.MentionChannels == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v118, v119 := range in.MentionChannels {
				if v118 > 0 {
					out.RawByte(',')
				}
				if v119 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo15(out, *v119)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"activity\":"
		out.RawString(prefix)
		if in.Activity == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo39(out, *in.Activity)
		}
	}
	{
		const prefix string = ",\"application\":"
		out.RawString(prefix)
		if in.Application == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo40(out, *in.Application)
		}
	}
	{
		const prefix string = ",\"message_reference\":"
		out.RawString(prefix)
		if in.MessageReference == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo41(out, *in.MessageReference)
		}
	}
	{
		const prefix string = ",\"flags\":"
		out.RawString(prefix)
		out.Int(int(in.Flags))
	}
	{
		const prefix string = ",\"stickers\":"
		out.RawString(prefix)
		if in.Stickers == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v120, v121 := range in.Stickers {
				if v120 > 0 {
					out.RawByte(',')
				}
				if v121 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo42(out, *v121)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MessageCreate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo56(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MessageCreate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo56(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MessageCreate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo56(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MessageCreate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo56(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo57(in *jlexer.Lexer, out *MessageAck) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "message_id":
			out.MessageID = int64(in.Int64Str())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo57(out *jwriter.Writer, in MessageAck) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"message_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.MessageID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MessageAck) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo57(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MessageAck) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo57(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MessageAck) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo57(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MessageAck) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo57(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo58(in *jlexer.Lexer, out *InviteDelete) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "code":
			out.Code = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo58(out *jwriter.Writer, in InviteDelete) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.String(string(in.Code))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v InviteDelete) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo58(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v InviteDelete) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo58(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *InviteDelete) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo58(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *InviteDelete) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo58(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo59(in *jlexer.Lexer, out *InviteCreate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "code":
			out.Code = string(in.String())
		case "created_at":
			out.CreatedAt = Timestamp(in.String())
		case "max_age":
			out.MaxAge = int(in.Int())
		case "max_uses":
			out.MaxUses = int(in.Int())
		case "temporary":
			out.Temporary = bool(in.Bool())
		case "uses":
			out.Uses = int(in.Int())
		case "inviter":
			if in.IsNull() {
				in.Skip()
				out.Inviter = nil
			} else {
				if out.Inviter == nil {
					out.Inviter = new(InviteUser)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo60(in, out.Inviter)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo59(out *jwriter.Writer, in InviteCreate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.String(string(in.Code))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"max_age\":"
		out.RawString(prefix)
		out.Int(int(in.MaxAge))
	}
	{
		const prefix string = ",\"max_uses\":"
		out.RawString(prefix)
		out.Int(int(in.MaxUses))
	}
	{
		const prefix string = ",\"temporary\":"
		out.RawString(prefix)
		out.Bool(bool(in.Temporary))
	}
	{
		const prefix string = ",\"uses\":"
		out.RawString(prefix)
		out.Int(int(in.Uses))
	}
	{
		const prefix string = ",\"inviter\":"
		out.RawString(prefix)
		if in.Inviter == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo60(out, *in.Inviter)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v InviteCreate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo59(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v InviteCreate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo59(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *InviteCreate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo59(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *InviteCreate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo59(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo60(in *jlexer.Lexer, out *InviteUser) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "avatar":
			out.Avatar = string(in.String())
		case "discriminator":
			out.Discriminator = string(in.String())
		case "username":
			out.Username = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo60(out *jwriter.Writer, in InviteUser) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"discriminator\":"
		out.RawString(prefix)
		out.String(string(in.Discriminator))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	out.RawByte('}')
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo61(in *jlexer.Lexer, out *GuildUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Guild = new(Guild)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "icon":
			out.Icon = string(in.String())
		case "region":
			out.Region = string(in.String())
		case "afk_channel_id":
			out.AfkChannelID = int64(in.Int64Str())
		case "owner_id":
			out.OwnerID = int64(in.Int64Str())
		case "owner":
			out.Owner = bool(in.Bool())
		case "joined_at":
			out.JoinedAt = Timestamp(in.String())
		case "discovery_splash":
			out.DiscoverySplash = string(in.String())
		case "splash":
			out.Splash = string(in.String())
		case "afk_timeout":
			out.AfkTimeout = int(in.Int())
		case "member_count":
			out.MemberCount = int(in.Int())
		case "verification_level":
			out.VerificationLevel = VerificationLevel(in.Int())
		case "large":
			out.Large = bool(in.Bool())
		case "default_message_notifications":
			out.DefaultMessageNotifications = MessageNotifications(in.Int())
		case "roles":
			if in.IsNull() {
				in.Skip()
				out.Roles = nil
			} else {
				in.Delim('[')
				if out.Roles == nil {
					if !in.IsDelim(']') {
						out.Roles = make([]*Role, 0, 8)
					} else {
						out.Roles = []*Role{}
					}
				} else {
					out.Roles = (out.Roles)[:0]
				}
				for !in.IsDelim(']') {
					var v122 *Role
					if in.IsNull() {
						in.Skip()
						v122 = nil
					} else {
						if v122 == nil {
							v122 = new(Role)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo29(in, v122)
					}
					out.Roles = append(out.Roles, v122)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "emojis":
			if in.IsNull() {
				in.Skip()
				out.Emojis = nil
			} else {
				in.Delim('[')
				if out.Emojis == nil {
					if !in.IsDelim(']') {
						out.Emojis = make([]*Emoji, 0, 8)
					} else {
						out.Emojis = []*Emoji{}
					}
				} else {
					out.Emojis = (out.Emojis)[:0]
				}
				for !in.IsDelim(']') {
					var v123 *Emoji
					if in.IsNull() {
						in.Skip()
						v123 = nil
					} else {
						if v123 == nil {
							v123 = new(Emoji)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo30(in, v123)
					}
					out.Emojis = append(out.Emojis, v123)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "members":
			if in.IsNull() {
				in.Skip()
				out.Members = nil
			} else {
				in.Delim('[')
				if out.Members == nil {
					if !in.IsDelim(']') {
						out.Members = make([]*Member, 0, 8)
					} else {
						out.Members = []*Member{}
					}
				} else {
					out.Members = (out.Members)[:0]
				}
				for !in.IsDelim(']') {
					var v124 *Member
					if in.IsNull() {
						in.Skip()
						v124 = nil
					} else {
						if v124 == nil {
							v124 = new(Member)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo31(in, v124)
					}
					out.Members = append(out.Members, v124)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "presences":
			if in.IsNull() {
				in.Skip()
				out.Presences = nil
			} else {
				in.Delim('[')
				if out.Presences == nil {
					if !in.IsDelim(']') {
						out.Presences = make([]*Presence, 0, 8)
					} else {
						out.Presences = []*Presence{}
					}
				} else {
					out.Presences = (out.Presences)[:0]
				}
				for !in.IsDelim(']') {
					var v125 *Presence
					if in.IsNull() {
						in.Skip()
						v125 = nil
					} else {
						if v125 == nil {
							v125 = new(Presence)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo20(in, v125)
					}
					out.Presences = append(out.Presences, v125)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "max_presences":
			out.MaxPresences = int(in.Int())
		case "max_members":
			out.MaxMembers = int(in.Int())
		case "channels":
			if in.IsNull() {
				in.Skip()
				out.Channels = nil
			} else {
				in.Delim('[')
				if out.Channels == nil {
					if !in.IsDelim(']') {
						out.Channels = make([]*Channel, 0, 8)
					} else {
						out.Channels = []*Channel{}
					}
				} else {
					out.Channels = (out.Channels)[:0]
				}
				for !in.IsDelim(']') {
					var v126 *Channel
					if in.IsNull() {
						in.Skip()
						v126 = nil
					} else {
						if v126 == nil {
							v126 = new(Channel)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo15(in, v126)
					}
					out.Channels = append(out.Channels, v126)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "voice_states":
			if in.IsNull() {
				in.Skip()
				out.VoiceStates = nil
			} else {
				in.Delim('[')
				if out.VoiceStates == nil {
					if !in.IsDelim(']') {
						out.VoiceStates = make([]*VoiceState, 0, 8)
					} else {
						out.VoiceStates = []*VoiceState{}
					}
				} else {
					out.VoiceStates = (out.VoiceStates)[:0]
				}
				for !in.IsDelim(']') {
					var v127 *VoiceState
					if in.IsNull() {
						in.Skip()
						v127 = nil
					} else {
						if v127 == nil {
							v127 = new(VoiceState)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo32(in, v127)
					}
					out.VoiceStates = append(out.VoiceStates, v127)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "unavailable":
			out.Unavailable = bool(in.Bool())
		case "explicit_content_filter":
			out.ExplicitContentFilter = ExplicitContentFilterLevel(in.Int())
		case "features":
			if in.IsNull() {
				in.Skip()
				out.Features = nil
			} else {
				in.Delim('[')
				if out.Features == nil {
					if !in.IsDelim(']') {
						out.Features = make([]string, 0, 4)
					} else {
						out.Features = []string{}
					}
				} else {
					out.Features = (out.Features)[:0]
				}
				for !in.IsDelim(']') {
					var v128 string
					v128 = string(in.String())
					out.Features = append(out.Features, v128)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "mfa_level":
			out.MfaLevel = MfaLevel(in.Int())
		case "application_id":
			out.ApplicationID = int64(in.Int64Str())
		case "widget_enabled":
			out.WidgetEnabled = bool(in.Bool())
		case "widget_channel_id":
			out.WidgetChannelID = int64(in.Int64Str())
		case "system_channel_id":
			out.SystemChannelID = int64(in.Int64Str())
		case "system_channel_flags":
			out.SystemChannelFlags = SystemChannelFlag(in.Int())
		case "rules_channel_id":
			out.RulesChannelID = int64(in.Int64Str())
		case "vanity_url_code":
			out.VanityURLCode = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "banner":
			out.Banner = string(in.String())
		case "premium_tier":
			out.PremiumTier = PremiumTier(in.Int())
		case "premium_subscription_count":
			out.PremiumSubscriptionCount = int(in.Int())
		case "preferred_locale":
			out.PreferredLocale = string(in.String())
		case "public_updates_channel_id":
			out.PublicUpdatesChannelID = int64(in.Int64Str())
		case "max_video_channel_users":
			out.MaxVideoChannelUsers = int(in.Int())
		case "approximate_member_count":
			out.ApproximateMemberCount = int(in.Int())
		case "approximate_presence_count":
			out.ApproximatePresenceCount = int(in.Int())
		case "permissions":
			out.Permissions = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo61(out *jwriter.Writer, in GuildUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"icon\":"
		out.RawString(prefix)
		out.String(string(in.Icon))
	}
	{
		const prefix string = ",\"region\":"
		out.RawString(prefix)
		out.String(string(in.Region))
	}
	{
		const prefix string = ",\"afk_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.AfkChannelID))
	}
	{
		const prefix string = ",\"owner_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.OwnerID))
	}
	{
		const prefix string = ",\"owner\":"
		out.RawString(prefix)
		out.Bool(bool(in.Owner))
	}
	{
		const prefix string = ",\"joined_at\":"
		out.RawString(prefix)
		out.String(string(in.JoinedAt))
	}
	{
		const prefix string = ",\"discovery_splash\":"
		out.RawString(prefix)
		out.String(string(in.DiscoverySplash))
	}
	{
		const prefix string = ",\"splash\":"
		out.RawString(prefix)
		out.String(string(in.Splash))
	}
	{
		const prefix string = ",\"afk_timeout\":"
		out.RawString(prefix)
		out.Int(int(in.AfkTimeout))
	}
	{
		const prefix string = ",\"member_count\":"
		out.RawString(prefix)
		out.Int(int(in.MemberCount))
	}
	{
		const prefix string = ",\"verification_level\":"
		out.RawString(prefix)
		out.Int(int(in.VerificationLevel))
	}
	{
		const prefix string = ",\"large\":"
		out.RawString(prefix)
		out.Bool(bool(in.Large))
	}
	{
		const prefix string = ",\"default_message_notifications\":"
		out.RawString(prefix)
		out.Int(int(in.DefaultMessageNotifications))
	}
	{
		const prefix string = ",\"roles\":"
		out.RawString(prefix)
		if in.Roles == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v129, v130 := range in.Roles {
				if v129 > 0 {
					out.RawByte(',')
				}
				if v130 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo29(out, *v130)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"emojis\":"
		out.RawString(prefix)
		if in.Emojis == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v131, v132 := range in.Emojis {
				if v131 > 0 {
					out.RawByte(',')
				}
				if v132 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo30(out, *v132)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"members\":"
		out.RawString(prefix)
		if in.Members == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v133, v134 := range in.Members {
				if v133 > 0 {
					out.RawByte(',')
				}
				if v134 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo31(out, *v134)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"presences\":"
		out.RawString(prefix)
		if in.Presences == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v135, v136 := range in.Presences {
				if v135 > 0 {
					out.RawByte(',')
				}
				if v136 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo20(out, *v136)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"max_presences\":"
		out.RawString(prefix)
		out.Int(int(in.MaxPresences))
	}
	{
		const prefix string = ",\"max_members\":"
		out.RawString(prefix)
		out.Int(int(in.MaxMembers))
	}
	{
		const prefix string = ",\"channels\":"
		out.RawString(prefix)
		if in.Channels == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v137, v138 := range in.Channels {
				if v137 > 0 {
					out.RawByte(',')
				}
				if v138 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo15(out, *v138)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"voice_states\":"
		out.RawString(prefix)
		if in.VoiceStates == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v139, v140 := range in.VoiceStates {
				if v139 > 0 {
					out.RawByte(',')
				}
				if v140 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo32(out, *v140)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"unavailable\":"
		out.RawString(prefix)
		out.Bool(bool(in.Unavailable))
	}
	{
		const prefix string = ",\"explicit_content_filter\":"
		out.RawString(prefix)
		out.Int(int(in.ExplicitContentFilter))
	}
	{
		const prefix string = ",\"features\":"
		out.RawString(prefix)
		if in.Features == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v141, v142 := range in.Features {
				if v141 > 0 {
					out.RawByte(',')
				}
				out.String(string(v142))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"mfa_level\":"
		out.RawString(prefix)
		out.Int(int(in.MfaLevel))
	}
	{
		const prefix string = ",\"application_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ApplicationID))
	}
	{
		const prefix string = ",\"widget_enabled\":"
		out.RawString(prefix)
		out.Bool(bool(in.WidgetEnabled))
	}
	{
		const prefix string = ",\"widget_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.WidgetChannelID))
	}
	{
		const prefix string = ",\"system_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.SystemChannelID))
	}
	{
		const prefix string = ",\"system_channel_flags\":"
		out.RawString(prefix)
		out.Int(int(in.SystemChannelFlags))
	}
	{
		const prefix string = ",\"rules_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.RulesChannelID))
	}
	{
		const prefix string = ",\"vanity_url_code\":"
		out.RawString(prefix)
		out.String(string(in.VanityURLCode))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"banner\":"
		out.RawString(prefix)
		out.String(string(in.Banner))
	}
	{
		const prefix string = ",\"premium_tier\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumTier))
	}
	{
		const prefix string = ",\"premium_subscription_count\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumSubscriptionCount))
	}
	{
		const prefix string = ",\"preferred_locale\":"
		out.RawString(prefix)
		out.String(string(in.PreferredLocale))
	}
	{
		const prefix string = ",\"public_updates_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.PublicUpdatesChannelID))
	}
	{
		const prefix string = ",\"max_video_channel_users\":"
		out.RawString(prefix)
		out.Int(int(in.MaxVideoChannelUsers))
	}
	{
		const prefix string = ",\"approximate_member_count\":"
		out.RawString(prefix)
		out.Int(int(in.ApproximateMemberCount))
	}
	{
		const prefix string = ",\"approximate_presence_count\":"
		out.RawString(prefix)
		out.Int(int(in.ApproximatePresenceCount))
	}
	{
		const prefix string = ",\"permissions\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Permissions))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo61(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo61(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo61(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo61(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo62(in *jlexer.Lexer, out *GuildRoleUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.GuildRole = new(GuildRole)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "role":
			if in.IsNull() {
				in.Skip()
				out.Role = nil
			} else {
				if out.Role == nil {
					out.Role = new(Role)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo29(in, out.Role)
			}
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo62(out *jwriter.Writer, in GuildRoleUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"role\":"
		out.RawString(prefix[1:])
		if in.Role == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo29(out, *in.Role)
		}
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildRoleUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo62(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildRoleUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo62(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildRoleUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo62(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildRoleUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo62(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo63(in *jlexer.Lexer, out *GuildRoleDelete) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "role_id":
			out.RoleID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo63(out *jwriter.Writer, in GuildRoleDelete) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"role_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.RoleID))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildRoleDelete) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo63(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildRoleDelete) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo63(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildRoleDelete) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo63(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildRoleDelete) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo63(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo64(in *jlexer.Lexer, out *GuildRoleCreate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.GuildRole = new(GuildRole)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "role":
			if in.IsNull() {
				in.Skip()
				out.Role = nil
			} else {
				if out.Role == nil {
					out.Role = new(Role)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo29(in, out.Role)
			}
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo64(out *jwriter.Writer, in GuildRoleCreate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"role\":"
		out.RawString(prefix[1:])
		if in.Role == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo29(out, *in.Role)
		}
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildRoleCreate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo64(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildRoleCreate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo64(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildRoleCreate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo64(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildRoleCreate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo64(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo65(in *jlexer.Lexer, out *GuildMembersChunk) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "members":
			if in.IsNull() {
				in.Skip()
				out.Members = nil
			} else {
				in.Delim('[')
				if out.Members == nil {
					if !in.IsDelim(']') {
						out.Members = make([]*Member, 0, 8)
					} else {
						out.Members = []*Member{}
					}
				} else {
					out.Members = (out.Members)[:0]
				}
				for !in.IsDelim(']') {
					var v143 *Member
					if in.IsNull() {
						in.Skip()
						v143 = nil
					} else {
						if v143 == nil {
							v143 = new(Member)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo31(in, v143)
					}
					out.Members = append(out.Members, v143)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "chunk_index":
			out.ChunkIndex = int(in.Int())
		case "chunk_count":
			out.ChunkCount = int(in.Int())
		case "nonce":
			out.Nonce = string(in.String())
		case "presences":
			if in.IsNull() {
				in.Skip()
				out.Presences = nil
			} else {
				in.Delim('[')
				if out.Presences == nil {
					if !in.IsDelim(']') {
						out.Presences = make([]*Presence, 0, 8)
					} else {
						out.Presences = []*Presence{}
					}
				} else {
					out.Presences = (out.Presences)[:0]
				}
				for !in.IsDelim(']') {
					var v144 *Presence
					if in.IsNull() {
						in.Skip()
						v144 = nil
					} else {
						if v144 == nil {
							v144 = new(Presence)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo20(in, v144)
					}
					out.Presences = append(out.Presences, v144)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo65(out *jwriter.Writer, in GuildMembersChunk) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"members\":"
		out.RawString(prefix)
		if in.Members == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v145, v146 := range in.Members {
				if v145 > 0 {
					out.RawByte(',')
				}
				if v146 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo31(out, *v146)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"chunk_index\":"
		out.RawString(prefix)
		out.Int(int(in.ChunkIndex))
	}
	{
		const prefix string = ",\"chunk_count\":"
		out.RawString(prefix)
		out.Int(int(in.ChunkCount))
	}
	{
		const prefix string = ",\"nonce\":"
		out.RawString(prefix)
		out.String(string(in.Nonce))
	}
	if len(in.Presences) != 0 {
		const prefix string = ",\"presences\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v147, v148 := range in.Presences {
				if v147 > 0 {
					out.RawByte(',')
				}
				if v148 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo20(out, *v148)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildMembersChunk) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo65(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildMembersChunk) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo65(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildMembersChunk) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo65(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildMembersChunk) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo65(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo66(in *jlexer.Lexer, out *GuildMemberUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Member = new(Member)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "joined_at":
			out.JoinedAt = Timestamp(in.String())
		case "nick":
			out.Nick = string(in.String())
		case "deaf":
			out.Deaf = bool(in.Bool())
		case "mute":
			out.Mute = bool(in.Bool())
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "roles":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Roles).UnmarshalJSON(data))
			}
		case "premium_since":
			out.PremiumSince = Timestamp(in.String())
		case "pending":
			out.Pending = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo66(out *jwriter.Writer, in GuildMemberUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"joined_at\":"
		out.RawString(prefix)
		out.String(string(in.JoinedAt))
	}
	{
		const prefix string = ",\"nick\":"
		out.RawString(prefix)
		out.String(string(in.Nick))
	}
	{
		const prefix string = ",\"deaf\":"
		out.RawString(prefix)
		out.Bool(bool(in.Deaf))
	}
	{
		const prefix string = ",\"mute\":"
		out.RawString(prefix)
		out.Bool(bool(in.Mute))
	}
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix)
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"roles\":"
		out.RawString(prefix)
		out.Raw((in.Roles).MarshalJSON())
	}
	{
		const prefix string = ",\"premium_since\":"
		out.RawString(prefix)
		out.String(string(in.PremiumSince))
	}
	{
		const prefix string = ",\"pending\":"
		out.RawString(prefix)
		out.Bool(bool(in.Pending))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildMemberUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo66(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildMemberUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo66(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildMemberUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo66(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildMemberUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo66(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo67(in *jlexer.Lexer, out *GuildMemberRemove) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Member = new(Member)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "joined_at":
			out.JoinedAt = Timestamp(in.String())
		case "nick":
			out.Nick = string(in.String())
		case "deaf":
			out.Deaf = bool(in.Bool())
		case "mute":
			out.Mute = bool(in.Bool())
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "roles":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Roles).UnmarshalJSON(data))
			}
		case "premium_since":
			out.PremiumSince = Timestamp(in.String())
		case "pending":
			out.Pending = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo67(out *jwriter.Writer, in GuildMemberRemove) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"joined_at\":"
		out.RawString(prefix)
		out.String(string(in.JoinedAt))
	}
	{
		const prefix string = ",\"nick\":"
		out.RawString(prefix)
		out.String(string(in.Nick))
	}
	{
		const prefix string = ",\"deaf\":"
		out.RawString(prefix)
		out.Bool(bool(in.Deaf))
	}
	{
		const prefix string = ",\"mute\":"
		out.RawString(prefix)
		out.Bool(bool(in.Mute))
	}
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix)
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"roles\":"
		out.RawString(prefix)
		out.Raw((in.Roles).MarshalJSON())
	}
	{
		const prefix string = ",\"premium_since\":"
		out.RawString(prefix)
		out.String(string(in.PremiumSince))
	}
	{
		const prefix string = ",\"pending\":"
		out.RawString(prefix)
		out.Bool(bool(in.Pending))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildMemberRemove) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo67(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildMemberRemove) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo67(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildMemberRemove) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo67(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildMemberRemove) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo67(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo68(in *jlexer.Lexer, out *GuildMemberAdd) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Member = new(Member)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "joined_at":
			out.JoinedAt = Timestamp(in.String())
		case "nick":
			out.Nick = string(in.String())
		case "deaf":
			out.Deaf = bool(in.Bool())
		case "mute":
			out.Mute = bool(in.Bool())
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "roles":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Roles).UnmarshalJSON(data))
			}
		case "premium_since":
			out.PremiumSince = Timestamp(in.String())
		case "pending":
			out.Pending = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo68(out *jwriter.Writer, in GuildMemberAdd) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"joined_at\":"
		out.RawString(prefix)
		out.String(string(in.JoinedAt))
	}
	{
		const prefix string = ",\"nick\":"
		out.RawString(prefix)
		out.String(string(in.Nick))
	}
	{
		const prefix string = ",\"deaf\":"
		out.RawString(prefix)
		out.Bool(bool(in.Deaf))
	}
	{
		const prefix string = ",\"mute\":"
		out.RawString(prefix)
		out.Bool(bool(in.Mute))
	}
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix)
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"roles\":"
		out.RawString(prefix)
		out.Raw((in.Roles).MarshalJSON())
	}
	{
		const prefix string = ",\"premium_since\":"
		out.RawString(prefix)
		out.String(string(in.PremiumSince))
	}
	{
		const prefix string = ",\"pending\":"
		out.RawString(prefix)
		out.Bool(bool(in.Pending))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildMemberAdd) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo68(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildMemberAdd) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo68(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildMemberAdd) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo68(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildMemberAdd) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo68(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo69(in *jlexer.Lexer, out *GuildIntegrationsUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo69(out *jwriter.Writer, in GuildIntegrationsUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildIntegrationsUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo69(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildIntegrationsUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo69(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildIntegrationsUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo69(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildIntegrationsUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo69(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo70(in *jlexer.Lexer, out *GuildEmojisUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "emojis":
			if in.IsNull() {
				in.Skip()
				out.Emojis = nil
			} else {
				in.Delim('[')
				if out.Emojis == nil {
					if !in.IsDelim(']') {
						out.Emojis = make([]*Emoji, 0, 8)
					} else {
						out.Emojis = []*Emoji{}
					}
				} else {
					out.Emojis = (out.Emojis)[:0]
				}
				for !in.IsDelim(']') {
					var v149 *Emoji
					if in.IsNull() {
						in.Skip()
						v149 = nil
					} else {
						if v149 == nil {
							v149 = new(Emoji)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo30(in, v149)
					}
					out.Emojis = append(out.Emojis, v149)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo70(out *jwriter.Writer, in GuildEmojisUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"emojis\":"
		out.RawString(prefix)
		if in.Emojis == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v150, v151 := range in.Emojis {
				if v150 > 0 {
					out.RawByte(',')
				}
				if v151 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo30(out, *v151)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildEmojisUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo70(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildEmojisUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo70(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildEmojisUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo70(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildEmojisUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo70(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo71(in *jlexer.Lexer, out *GuildDelete) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Guild = new(Guild)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "icon":
			out.Icon = string(in.String())
		case "region":
			out.Region = string(in.String())
		case "afk_channel_id":
			out.AfkChannelID = int64(in.Int64Str())
		case "owner_id":
			out.OwnerID = int64(in.Int64Str())
		case "owner":
			out.Owner = bool(in.Bool())
		case "joined_at":
			out.JoinedAt = Timestamp(in.String())
		case "discovery_splash":
			out.DiscoverySplash = string(in.String())
		case "splash":
			out.Splash = string(in.String())
		case "afk_timeout":
			out.AfkTimeout = int(in.Int())
		case "member_count":
			out.MemberCount = int(in.Int())
		case "verification_level":
			out.VerificationLevel = VerificationLevel(in.Int())
		case "large":
			out.Large = bool(in.Bool())
		case "default_message_notifications":
			out.DefaultMessageNotifications = MessageNotifications(in.Int())
		case "roles":
			if in.IsNull() {
				in.Skip()
				out.Roles = nil
			} else {
				in.Delim('[')
				if out.Roles == nil {
					if !in.IsDelim(']') {
						out.Roles = make([]*Role, 0, 8)
					} else {
						out.Roles = []*Role{}
					}
				} else {
					out.Roles = (out.Roles)[:0]
				}
				for !in.IsDelim(']') {
					var v152 *Role
					if in.IsNull() {
						in.Skip()
						v152 = nil
					} else {
						if v152 == nil {
							v152 = new(Role)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo29(in, v152)
					}
					out.Roles = append(out.Roles, v152)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "emojis":
			if in.IsNull() {
				in.Skip()
				out.Emojis = nil
			} else {
				in.Delim('[')
				if out.Emojis == nil {
					if !in.IsDelim(']') {
						out.Emojis = make([]*Emoji, 0, 8)
					} else {
						out.Emojis = []*Emoji{}
					}
				} else {
					out.Emojis = (out.Emojis)[:0]
				}
				for !in.IsDelim(']') {
					var v153 *Emoji
					if in.IsNull() {
						in.Skip()
						v153 = nil
					} else {
						if v153 == nil {
							v153 = new(Emoji)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo30(in, v153)
					}
					out.Emojis = append(out.Emojis, v153)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "members":
			if in.IsNull() {
				in.Skip()
				out.Members = nil
			} else {
				in.Delim('[')
				if out.Members == nil {
					if !in.IsDelim(']') {
						out.Members = make([]*Member, 0, 8)
					} else {
						out.Members = []*Member{}
					}
				} else {
					out.Members = (out.Members)[:0]
				}
				for !in.IsDelim(']') {
					var v154 *Member
					if in.IsNull() {
						in.Skip()
						v154 = nil
					} else {
						if v154 == nil {
							v154 = new(Member)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo31(in, v154)
					}
					out.Members = append(out.Members, v154)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "presences":
			if in.IsNull() {
				in.Skip()
				out.Presences = nil
			} else {
				in.Delim('[')
				if out.Presences == nil {
					if !in.IsDelim(']') {
						out.Presences = make([]*Presence, 0, 8)
					} else {
						out.Presences = []*Presence{}
					}
				} else {
					out.Presences = (out.Presences)[:0]
				}
				for !in.IsDelim(']') {
					var v155 *Presence
					if in.IsNull() {
						in.Skip()
						v155 = nil
					} else {
						if v155 == nil {
							v155 = new(Presence)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo20(in, v155)
					}
					out.Presences = append(out.Presences, v155)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "max_presences":
			out.MaxPresences = int(in.Int())
		case "max_members":
			out.MaxMembers = int(in.Int())
		case "channels":
			if in.IsNull() {
				in.Skip()
				out.Channels = nil
			} else {
				in.Delim('[')
				if out.Channels == nil {
					if !in.IsDelim(']') {
						out.Channels = make([]*Channel, 0, 8)
					} else {
						out.Channels = []*Channel{}
					}
				} else {
					out.Channels = (out.Channels)[:0]
				}
				for !in.IsDelim(']') {
					var v156 *Channel
					if in.IsNull() {
						in.Skip()
						v156 = nil
					} else {
						if v156 == nil {
							v156 = new(Channel)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo15(in, v156)
					}
					out.Channels = append(out.Channels, v156)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "voice_states":
			if in.IsNull() {
				in.Skip()
				out.VoiceStates = nil
			} else {
				in.Delim('[')
				if out.VoiceStates == nil {
					if !in.IsDelim(']') {
						out.VoiceStates = make([]*VoiceState, 0, 8)
					} else {
						out.VoiceStates = []*VoiceState{}
					}
				} else {
					out.VoiceStates = (out.VoiceStates)[:0]
				}
				for !in.IsDelim(']') {
					var v157 *VoiceState
					if in.IsNull() {
						in.Skip()
						v157 = nil
					} else {
						if v157 == nil {
							v157 = new(VoiceState)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo32(in, v157)
					}
					out.VoiceStates = append(out.VoiceStates, v157)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "unavailable":
			out.Unavailable = bool(in.Bool())
		case "explicit_content_filter":
			out.ExplicitContentFilter = ExplicitContentFilterLevel(in.Int())
		case "features":
			if in.IsNull() {
				in.Skip()
				out.Features = nil
			} else {
				in.Delim('[')
				if out.Features == nil {
					if !in.IsDelim(']') {
						out.Features = make([]string, 0, 4)
					} else {
						out.Features = []string{}
					}
				} else {
					out.Features = (out.Features)[:0]
				}
				for !in.IsDelim(']') {
					var v158 string
					v158 = string(in.String())
					out.Features = append(out.Features, v158)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "mfa_level":
			out.MfaLevel = MfaLevel(in.Int())
		case "application_id":
			out.ApplicationID = int64(in.Int64Str())
		case "widget_enabled":
			out.WidgetEnabled = bool(in.Bool())
		case "widget_channel_id":
			out.WidgetChannelID = int64(in.Int64Str())
		case "system_channel_id":
			out.SystemChannelID = int64(in.Int64Str())
		case "system_channel_flags":
			out.SystemChannelFlags = SystemChannelFlag(in.Int())
		case "rules_channel_id":
			out.RulesChannelID = int64(in.Int64Str())
		case "vanity_url_code":
			out.VanityURLCode = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "banner":
			out.Banner = string(in.String())
		case "premium_tier":
			out.PremiumTier = PremiumTier(in.Int())
		case "premium_subscription_count":
			out.PremiumSubscriptionCount = int(in.Int())
		case "preferred_locale":
			out.PreferredLocale = string(in.String())
		case "public_updates_channel_id":
			out.PublicUpdatesChannelID = int64(in.Int64Str())
		case "max_video_channel_users":
			out.MaxVideoChannelUsers = int(in.Int())
		case "approximate_member_count":
			out.ApproximateMemberCount = int(in.Int())
		case "approximate_presence_count":
			out.ApproximatePresenceCount = int(in.Int())
		case "permissions":
			out.Permissions = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo71(out *jwriter.Writer, in GuildDelete) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"icon\":"
		out.RawString(prefix)
		out.String(string(in.Icon))
	}
	{
		const prefix string = ",\"region\":"
		out.RawString(prefix)
		out.String(string(in.Region))
	}
	{
		const prefix string = ",\"afk_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.AfkChannelID))
	}
	{
		const prefix string = ",\"owner_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.OwnerID))
	}
	{
		const prefix string = ",\"owner\":"
		out.RawString(prefix)
		out.Bool(bool(in.Owner))
	}
	{
		const prefix string = ",\"joined_at\":"
		out.RawString(prefix)
		out.String(string(in.JoinedAt))
	}
	{
		const prefix string = ",\"discovery_splash\":"
		out.RawString(prefix)
		out.String(string(in.DiscoverySplash))
	}
	{
		const prefix string = ",\"splash\":"
		out.RawString(prefix)
		out.String(string(in.Splash))
	}
	{
		const prefix string = ",\"afk_timeout\":"
		out.RawString(prefix)
		out.Int(int(in.AfkTimeout))
	}
	{
		const prefix string = ",\"member_count\":"
		out.RawString(prefix)
		out.Int(int(in.MemberCount))
	}
	{
		const prefix string = ",\"verification_level\":"
		out.RawString(prefix)
		out.Int(int(in.VerificationLevel))
	}
	{
		const prefix string = ",\"large\":"
		out.RawString(prefix)
		out.Bool(bool(in.Large))
	}
	{
		const prefix string = ",\"default_message_notifications\":"
		out.RawString(prefix)
		out.Int(int(in.DefaultMessageNotifications))
	}
	{
		const prefix string = ",\"roles\":"
		out.RawString(prefix)
		if in.Roles == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v159, v160 := range in.Roles {
				if v159 > 0 {
					out.RawByte(',')
				}
				if v160 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo29(out, *v160)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"emojis\":"
		out.RawString(prefix)
		if in.Emojis == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v161, v162 := range in.Emojis {
				if v161 > 0 {
					out.RawByte(',')
				}
				if v162 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo30(out, *v162)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"members\":"
		out.RawString(prefix)
		if in.Members == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v163, v164 := range in.Members {
				if v163 > 0 {
					out.RawByte(',')
				}
				if v164 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo31(out, *v164)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"presences\":"
		out.RawString(prefix)
		if in.Presences == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v165, v166 := range in.Presences {
				if v165 > 0 {
					out.RawByte(',')
				}
				if v166 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo20(out, *v166)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"max_presences\":"
		out.RawString(prefix)
		out.Int(int(in.MaxPresences))
	}
	{
		const prefix string = ",\"max_members\":"
		out.RawString(prefix)
		out.Int(int(in.MaxMembers))
	}
	{
		const prefix string = ",\"channels\":"
		out.RawString(prefix)
		if in.Channels == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v167, v168 := range in.Channels {
				if v167 > 0 {
					out.RawByte(',')
				}
				if v168 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo15(out, *v168)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"voice_states\":"
		out.RawString(prefix)
		if in.VoiceStates == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v169, v170 := range in.VoiceStates {
				if v169 > 0 {
					out.RawByte(',')
				}
				if v170 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo32(out, *v170)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"unavailable\":"
		out.RawString(prefix)
		out.Bool(bool(in.Unavailable))
	}
	{
		const prefix string = ",\"explicit_content_filter\":"
		out.RawString(prefix)
		out.Int(int(in.ExplicitContentFilter))
	}
	{
		const prefix string = ",\"features\":"
		out.RawString(prefix)
		if in.Features == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v171, v172 := range in.Features {
				if v171 > 0 {
					out.RawByte(',')
				}
				out.String(string(v172))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"mfa_level\":"
		out.RawString(prefix)
		out.Int(int(in.MfaLevel))
	}
	{
		const prefix string = ",\"application_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ApplicationID))
	}
	{
		const prefix string = ",\"widget_enabled\":"
		out.RawString(prefix)
		out.Bool(bool(in.WidgetEnabled))
	}
	{
		const prefix string = ",\"widget_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.WidgetChannelID))
	}
	{
		const prefix string = ",\"system_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.SystemChannelID))
	}
	{
		const prefix string = ",\"system_channel_flags\":"
		out.RawString(prefix)
		out.Int(int(in.SystemChannelFlags))
	}
	{
		const prefix string = ",\"rules_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.RulesChannelID))
	}
	{
		const prefix string = ",\"vanity_url_code\":"
		out.RawString(prefix)
		out.String(string(in.VanityURLCode))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"banner\":"
		out.RawString(prefix)
		out.String(string(in.Banner))
	}
	{
		const prefix string = ",\"premium_tier\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumTier))
	}
	{
		const prefix string = ",\"premium_subscription_count\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumSubscriptionCount))
	}
	{
		const prefix string = ",\"preferred_locale\":"
		out.RawString(prefix)
		out.String(string(in.PreferredLocale))
	}
	{
		const prefix string = ",\"public_updates_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.PublicUpdatesChannelID))
	}
	{
		const prefix string = ",\"max_video_channel_users\":"
		out.RawString(prefix)
		out.Int(int(in.MaxVideoChannelUsers))
	}
	{
		const prefix string = ",\"approximate_member_count\":"
		out.RawString(prefix)
		out.Int(int(in.ApproximateMemberCount))
	}
	{
		const prefix string = ",\"approximate_presence_count\":"
		out.RawString(prefix)
		out.Int(int(in.ApproximatePresenceCount))
	}
	{
		const prefix string = ",\"permissions\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Permissions))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildDelete) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo71(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildDelete) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo71(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildDelete) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo71(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildDelete) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo71(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo72(in *jlexer.Lexer, out *GuildCreate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Guild = new(Guild)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "icon":
			out.Icon = string(in.String())
		case "region":
			out.Region = string(in.String())
		case "afk_channel_id":
			out.AfkChannelID = int64(in.Int64Str())
		case "owner_id":
			out.OwnerID = int64(in.Int64Str())
		case "owner":
			out.Owner = bool(in.Bool())
		case "joined_at":
			out.JoinedAt = Timestamp(in.String())
		case "discovery_splash":
			out.DiscoverySplash = string(in.String())
		case "splash":
			out.Splash = string(in.String())
		case "afk_timeout":
			out.AfkTimeout = int(in.Int())
		case "member_count":
			out.MemberCount = int(in.Int())
		case "verification_level":
			out.VerificationLevel = VerificationLevel(in.Int())
		case "large":
			out.Large = bool(in.Bool())
		case "default_message_notifications":
			out.DefaultMessageNotifications = MessageNotifications(in.Int())
		case "roles":
			if in.IsNull() {
				in.Skip()
				out.Roles = nil
			} else {
				in.Delim('[')
				if out.Roles == nil {
					if !in.IsDelim(']') {
						out.Roles = make([]*Role, 0, 8)
					} else {
						out.Roles = []*Role{}
					}
				} else {
					out.Roles = (out.Roles)[:0]
				}
				for !in.IsDelim(']') {
					var v173 *Role
					if in.IsNull() {
						in.Skip()
						v173 = nil
					} else {
						if v173 == nil {
							v173 = new(Role)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo29(in, v173)
					}
					out.Roles = append(out.Roles, v173)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "emojis":
			if in.IsNull() {
				in.Skip()
				out.Emojis = nil
			} else {
				in.Delim('[')
				if out.Emojis == nil {
					if !in.IsDelim(']') {
						out.Emojis = make([]*Emoji, 0, 8)
					} else {
						out.Emojis = []*Emoji{}
					}
				} else {
					out.Emojis = (out.Emojis)[:0]
				}
				for !in.IsDelim(']') {
					var v174 *Emoji
					if in.IsNull() {
						in.Skip()
						v174 = nil
					} else {
						if v174 == nil {
							v174 = new(Emoji)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo30(in, v174)
					}
					out.Emojis = append(out.Emojis, v174)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "members":
			if in.IsNull() {
				in.Skip()
				out.Members = nil
			} else {
				in.Delim('[')
				if out.Members == nil {
					if !in.IsDelim(']') {
						out.Members = make([]*Member, 0, 8)
					} else {
						out.Members = []*Member{}
					}
				} else {
					out.Members = (out.Members)[:0]
				}
				for !in.IsDelim(']') {
					var v175 *Member
					if in.IsNull() {
						in.Skip()
						v175 = nil
					} else {
						if v175 == nil {
							v175 = new(Member)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo31(in, v175)
					}
					out.Members = append(out.Members, v175)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "presences":
			if in.IsNull() {
				in.Skip()
				out.Presences = nil
			} else {
				in.Delim('[')
				if out.Presences == nil {
					if !in.IsDelim(']') {
						out.Presences = make([]*Presence, 0, 8)
					} else {
						out.Presences = []*Presence{}
					}
				} else {
					out.Presences = (out.Presences)[:0]
				}
				for !in.IsDelim(']') {
					var v176 *Presence
					if in.IsNull() {
						in.Skip()
						v176 = nil
					} else {
						if v176 == nil {
							v176 = new(Presence)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo20(in, v176)
					}
					out.Presences = append(out.Presences, v176)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "max_presences":
			out.MaxPresences = int(in.Int())
		case "max_members":
			out.MaxMembers = int(in.Int())
		case "channels":
			if in.IsNull() {
				in.Skip()
				out.Channels = nil
			} else {
				in.Delim('[')
				if out.Channels == nil {
					if !in.IsDelim(']') {
						out.Channels = make([]*Channel, 0, 8)
					} else {
						out.Channels = []*Channel{}
					}
				} else {
					out.Channels = (out.Channels)[:0]
				}
				for !in.IsDelim(']') {
					var v177 *Channel
					if in.IsNull() {
						in.Skip()
						v177 = nil
					} else {
						if v177 == nil {
							v177 = new(Channel)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo15(in, v177)
					}
					out.Channels = append(out.Channels, v177)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "voice_states":
			if in.IsNull() {
				in.Skip()
				out.VoiceStates = nil
			} else {
				in.Delim('[')
				if out.VoiceStates == nil {
					if !in.IsDelim(']') {
						out.VoiceStates = make([]*VoiceState, 0, 8)
					} else {
						out.VoiceStates = []*VoiceState{}
					}
				} else {
					out.VoiceStates = (out.VoiceStates)[:0]
				}
				for !in.IsDelim(']') {
					var v178 *VoiceState
					if in.IsNull() {
						in.Skip()
						v178 = nil
					} else {
						if v178 == nil {
							v178 = new(VoiceState)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo32(in, v178)
					}
					out.VoiceStates = append(out.VoiceStates, v178)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "unavailable":
			out.Unavailable = bool(in.Bool())
		case "explicit_content_filter":
			out.ExplicitContentFilter = ExplicitContentFilterLevel(in.Int())
		case "features":
			if in.IsNull() {
				in.Skip()
				out.Features = nil
			} else {
				in.Delim('[')
				if out.Features == nil {
					if !in.IsDelim(']') {
						out.Features = make([]string, 0, 4)
					} else {
						out.Features = []string{}
					}
				} else {
					out.Features = (out.Features)[:0]
				}
				for !in.IsDelim(']') {
					var v179 string
					v179 = string(in.String())
					out.Features = append(out.Features, v179)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "mfa_level":
			out.MfaLevel = MfaLevel(in.Int())
		case "application_id":
			out.ApplicationID = int64(in.Int64Str())
		case "widget_enabled":
			out.WidgetEnabled = bool(in.Bool())
		case "widget_channel_id":
			out.WidgetChannelID = int64(in.Int64Str())
		case "system_channel_id":
			out.SystemChannelID = int64(in.Int64Str())
		case "system_channel_flags":
			out.SystemChannelFlags = SystemChannelFlag(in.Int())
		case "rules_channel_id":
			out.RulesChannelID = int64(in.Int64Str())
		case "vanity_url_code":
			out.VanityURLCode = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "banner":
			out.Banner = string(in.String())
		case "premium_tier":
			out.PremiumTier = PremiumTier(in.Int())
		case "premium_subscription_count":
			out.PremiumSubscriptionCount = int(in.Int())
		case "preferred_locale":
			out.PreferredLocale = string(in.String())
		case "public_updates_channel_id":
			out.PublicUpdatesChannelID = int64(in.Int64Str())
		case "max_video_channel_users":
			out.MaxVideoChannelUsers = int(in.Int())
		case "approximate_member_count":
			out.ApproximateMemberCount = int(in.Int())
		case "approximate_presence_count":
			out.ApproximatePresenceCount = int(in.Int())
		case "permissions":
			out.Permissions = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo72(out *jwriter.Writer, in GuildCreate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"icon\":"
		out.RawString(prefix)
		out.String(string(in.Icon))
	}
	{
		const prefix string = ",\"region\":"
		out.RawString(prefix)
		out.String(string(in.Region))
	}
	{
		const prefix string = ",\"afk_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.AfkChannelID))
	}
	{
		const prefix string = ",\"owner_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.OwnerID))
	}
	{
		const prefix string = ",\"owner\":"
		out.RawString(prefix)
		out.Bool(bool(in.Owner))
	}
	{
		const prefix string = ",\"joined_at\":"
		out.RawString(prefix)
		out.String(string(in.JoinedAt))
	}
	{
		const prefix string = ",\"discovery_splash\":"
		out.RawString(prefix)
		out.String(string(in.DiscoverySplash))
	}
	{
		const prefix string = ",\"splash\":"
		out.RawString(prefix)
		out.String(string(in.Splash))
	}
	{
		const prefix string = ",\"afk_timeout\":"
		out.RawString(prefix)
		out.Int(int(in.AfkTimeout))
	}
	{
		const prefix string = ",\"member_count\":"
		out.RawString(prefix)
		out.Int(int(in.MemberCount))
	}
	{
		const prefix string = ",\"verification_level\":"
		out.RawString(prefix)
		out.Int(int(in.VerificationLevel))
	}
	{
		const prefix string = ",\"large\":"
		out.RawString(prefix)
		out.Bool(bool(in.Large))
	}
	{
		const prefix string = ",\"default_message_notifications\":"
		out.RawString(prefix)
		out.Int(int(in.DefaultMessageNotifications))
	}
	{
		const prefix string = ",\"roles\":"
		out.RawString(prefix)
		if in.Roles == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v180, v181 := range in.Roles {
				if v180 > 0 {
					out.RawByte(',')
				}
				if v181 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo29(out, *v181)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"emojis\":"
		out.RawString(prefix)
		if in.Emojis == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v182, v183 := range in.Emojis {
				if v182 > 0 {
					out.RawByte(',')
				}
				if v183 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo30(out, *v183)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"members\":"
		out.RawString(prefix)
		if in.Members == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v184, v185 := range in.Members {
				if v184 > 0 {
					out.RawByte(',')
				}
				if v185 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo31(out, *v185)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"presences\":"
		out.RawString(prefix)
		if in.Presences == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v186, v187 := range in.Presences {
				if v186 > 0 {
					out.RawByte(',')
				}
				if v187 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo20(out, *v187)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"max_presences\":"
		out.RawString(prefix)
		out.Int(int(in.MaxPresences))
	}
	{
		const prefix string = ",\"max_members\":"
		out.RawString(prefix)
		out.Int(int(in.MaxMembers))
	}
	{
		const prefix string = ",\"channels\":"
		out.RawString(prefix)
		if in.Channels == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v188, v189 := range in.Channels {
				if v188 > 0 {
					out.RawByte(',')
				}
				if v189 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo15(out, *v189)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"voice_states\":"
		out.RawString(prefix)
		if in.VoiceStates == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v190, v191 := range in.VoiceStates {
				if v190 > 0 {
					out.RawByte(',')
				}
				if v191 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo32(out, *v191)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"unavailable\":"
		out.RawString(prefix)
		out.Bool(bool(in.Unavailable))
	}
	{
		const prefix string = ",\"explicit_content_filter\":"
		out.RawString(prefix)
		out.Int(int(in.ExplicitContentFilter))
	}
	{
		const prefix string = ",\"features\":"
		out.RawString(prefix)
		if in.Features == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v192, v193 := range in.Features {
				if v192 > 0 {
					out.RawByte(',')
				}
				out.String(string(v193))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"mfa_level\":"
		out.RawString(prefix)
		out.Int(int(in.MfaLevel))
	}
	{
		const prefix string = ",\"application_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ApplicationID))
	}
	{
		const prefix string = ",\"widget_enabled\":"
		out.RawString(prefix)
		out.Bool(bool(in.WidgetEnabled))
	}
	{
		const prefix string = ",\"widget_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.WidgetChannelID))
	}
	{
		const prefix string = ",\"system_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.SystemChannelID))
	}
	{
		const prefix string = ",\"system_channel_flags\":"
		out.RawString(prefix)
		out.Int(int(in.SystemChannelFlags))
	}
	{
		const prefix string = ",\"rules_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.RulesChannelID))
	}
	{
		const prefix string = ",\"vanity_url_code\":"
		out.RawString(prefix)
		out.String(string(in.VanityURLCode))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"banner\":"
		out.RawString(prefix)
		out.String(string(in.Banner))
	}
	{
		const prefix string = ",\"premium_tier\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumTier))
	}
	{
		const prefix string = ",\"premium_subscription_count\":"
		out.RawString(prefix)
		out.Int(int(in.PremiumSubscriptionCount))
	}
	{
		const prefix string = ",\"preferred_locale\":"
		out.RawString(prefix)
		out.String(string(in.PreferredLocale))
	}
	{
		const prefix string = ",\"public_updates_channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.PublicUpdatesChannelID))
	}
	{
		const prefix string = ",\"max_video_channel_users\":"
		out.RawString(prefix)
		out.Int(int(in.MaxVideoChannelUsers))
	}
	{
		const prefix string = ",\"approximate_member_count\":"
		out.RawString(prefix)
		out.Int(int(in.ApproximateMemberCount))
	}
	{
		const prefix string = ",\"approximate_presence_count\":"
		out.RawString(prefix)
		out.Int(int(in.ApproximatePresenceCount))
	}
	{
		const prefix string = ",\"permissions\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Permissions))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildCreate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo72(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildCreate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo72(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildCreate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo72(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildCreate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo72(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo73(in *jlexer.Lexer, out *GuildBanRemove) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo73(out *jwriter.Writer, in GuildBanRemove) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildBanRemove) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo73(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildBanRemove) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo73(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildBanRemove) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo73(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildBanRemove) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo73(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo74(in *jlexer.Lexer, out *GuildBanAdd) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, out.User)
			}
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo74(out *jwriter.Writer, in GuildBanAdd) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		if in.User == nil {
			out.RawString("null")
		} else {
			easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *in.User)
		}
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GuildBanAdd) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo74(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GuildBanAdd) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo74(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GuildBanAdd) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo74(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GuildBanAdd) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo74(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo75(in *jlexer.Lexer, out *Event) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "op":
			out.Operation = GatewayOP(in.Int())
		case "s":
			out.Sequence = int64(in.Int64())
		case "t":
			out.Type = string(in.String())
		case "d":
			if in.IsNull() {
				in.Skip()
				out.RawData = nil
			} else {
				out.RawData = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo75(out *jwriter.Writer, in Event) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"op\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Operation))
	}
	{
		const prefix string = ",\"s\":"
		out.RawString(prefix)
		out.Int64(int64(in.Sequence))
	}
	{
		const prefix string = ",\"t\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"d\":"
		out.RawString(prefix)
		out.Base64Bytes(in.RawData)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Event) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo75(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Event) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo75(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Event) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo75(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Event) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo75(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo76(in *jlexer.Lexer, out *Disconnect) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo76(out *jwriter.Writer, in Disconnect) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Disconnect) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo76(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Disconnect) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo76(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Disconnect) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo76(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Disconnect) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo76(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo77(in *jlexer.Lexer, out *Connect) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo77(out *jwriter.Writer, in Connect) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Connect) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo77(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Connect) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo77(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Connect) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo77(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Connect) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo77(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo78(in *jlexer.Lexer, out *ChannelUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Channel = new(Channel)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "topic":
			out.Topic = string(in.String())
		case "type":
			out.Type = ChannelType(in.Int())
		case "last_message_id":
			out.LastMessageID = int64(in.Int64Str())
		case "last_pin_timestamp":
			out.LastPinTimestamp = Timestamp(in.String())
		case "nsfw":
			out.NSFW = bool(in.Bool())
		case "icon":
			out.Icon = string(in.String())
		case "position":
			out.Position = int(in.Int())
		case "bitrate":
			out.Bitrate = int(in.Int())
		case "recipients":
			if in.IsNull() {
				in.Skip()
				out.Recipients = nil
			} else {
				in.Delim('[')
				if out.Recipients == nil {
					if !in.IsDelim(']') {
						out.Recipients = make([]*User, 0, 8)
					} else {
						out.Recipients = []*User{}
					}
				} else {
					out.Recipients = (out.Recipients)[:0]
				}
				for !in.IsDelim(']') {
					var v197 *User
					if in.IsNull() {
						in.Skip()
						v197 = nil
					} else {
						if v197 == nil {
							v197 = new(User)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, v197)
					}
					out.Recipients = append(out.Recipients, v197)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "permission_overwrites":
			if in.IsNull() {
				in.Skip()
				out.PermissionOverwrites = nil
			} else {
				in.Delim('[')
				if out.PermissionOverwrites == nil {
					if !in.IsDelim(']') {
						out.PermissionOverwrites = make([]*PermissionOverwrite, 0, 8)
					} else {
						out.PermissionOverwrites = []*PermissionOverwrite{}
					}
				} else {
					out.PermissionOverwrites = (out.PermissionOverwrites)[:0]
				}
				for !in.IsDelim(']') {
					var v198 *PermissionOverwrite
					if in.IsNull() {
						in.Skip()
						v198 = nil
					} else {
						if v198 == nil {
							v198 = new(PermissionOverwrite)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo33(in, v198)
					}
					out.PermissionOverwrites = append(out.PermissionOverwrites, v198)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "user_limit":
			out.UserLimit = int(in.Int())
		case "parent_id":
			out.ParentID = int64(in.Int64Str())
		case "rate_limit_per_user":
			out.RateLimitPerUser = int(in.Int())
		case "owner_id":
			out.OwnerID = int64(in.Int64())
		case "application_id":
			out.ApplicationID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo78(out *jwriter.Writer, in ChannelUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"topic\":"
		out.RawString(prefix)
		out.String(string(in.Topic))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"last_message_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.LastMessageID))
	}
	{
		const prefix string = ",\"last_pin_timestamp\":"
		out.RawString(prefix)
		out.String(string(in.LastPinTimestamp))
	}
	{
		const prefix string = ",\"nsfw\":"
		out.RawString(prefix)
		out.Bool(bool(in.NSFW))
	}
	{
		const prefix string = ",\"icon\":"
		out.RawString(prefix)
		out.String(string(in.Icon))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.Int(int(in.Position))
	}
	{
		const prefix string = ",\"bitrate\":"
		out.RawString(prefix)
		out.Int(int(in.Bitrate))
	}
	{
		const prefix string = ",\"recipients\":"
		out.RawString(prefix)
		if in.Recipients == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v199, v200 := range in.Recipients {
				if v199 > 0 {
					out.RawByte(',')
				}
				if v200 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *v200)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"permission_overwrites\":"
		out.RawString(prefix)
		if in.PermissionOverwrites == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v201, v202 := range in.PermissionOverwrites {
				if v201 > 0 {
					out.RawByte(',')
				}
				if v202 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo33(out, *v202)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"user_limit\":"
		out.RawString(prefix)
		out.Int(int(in.UserLimit))
	}
	{
		const prefix string = ",\"parent_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ParentID))
	}
	{
		const prefix string = ",\"rate_limit_per_user\":"
		out.RawString(prefix)
		out.Int(int(in.RateLimitPerUser))
	}
	{
		const prefix string = ",\"owner_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.OwnerID))
	}
	{
		const prefix string = ",\"application_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.ApplicationID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChannelUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo78(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChannelUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo78(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChannelUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo78(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChannelUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo78(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo79(in *jlexer.Lexer, out *ChannelPinsUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "last_pin_timestamp":
			out.LastPinTimestamp = string(in.String())
		case "channel_id":
			out.ChannelID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo79(out *jwriter.Writer, in ChannelPinsUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"last_pin_timestamp\":"
		out.RawString(prefix[1:])
		out.String(string(in.LastPinTimestamp))
	}
	{
		const prefix string = ",\"channel_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ChannelID))
	}
	if in.GuildID != 0 {
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChannelPinsUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo79(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChannelPinsUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo79(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChannelPinsUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo79(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChannelPinsUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo79(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo80(in *jlexer.Lexer, out *ChannelDelete) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Channel = new(Channel)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "topic":
			out.Topic = string(in.String())
		case "type":
			out.Type = ChannelType(in.Int())
		case "last_message_id":
			out.LastMessageID = int64(in.Int64Str())
		case "last_pin_timestamp":
			out.LastPinTimestamp = Timestamp(in.String())
		case "nsfw":
			out.NSFW = bool(in.Bool())
		case "icon":
			out.Icon = string(in.String())
		case "position":
			out.Position = int(in.Int())
		case "bitrate":
			out.Bitrate = int(in.Int())
		case "recipients":
			if in.IsNull() {
				in.Skip()
				out.Recipients = nil
			} else {
				in.Delim('[')
				if out.Recipients == nil {
					if !in.IsDelim(']') {
						out.Recipients = make([]*User, 0, 8)
					} else {
						out.Recipients = []*User{}
					}
				} else {
					out.Recipients = (out.Recipients)[:0]
				}
				for !in.IsDelim(']') {
					var v203 *User
					if in.IsNull() {
						in.Skip()
						v203 = nil
					} else {
						if v203 == nil {
							v203 = new(User)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, v203)
					}
					out.Recipients = append(out.Recipients, v203)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "permission_overwrites":
			if in.IsNull() {
				in.Skip()
				out.PermissionOverwrites = nil
			} else {
				in.Delim('[')
				if out.PermissionOverwrites == nil {
					if !in.IsDelim(']') {
						out.PermissionOverwrites = make([]*PermissionOverwrite, 0, 8)
					} else {
						out.PermissionOverwrites = []*PermissionOverwrite{}
					}
				} else {
					out.PermissionOverwrites = (out.PermissionOverwrites)[:0]
				}
				for !in.IsDelim(']') {
					var v204 *PermissionOverwrite
					if in.IsNull() {
						in.Skip()
						v204 = nil
					} else {
						if v204 == nil {
							v204 = new(PermissionOverwrite)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo33(in, v204)
					}
					out.PermissionOverwrites = append(out.PermissionOverwrites, v204)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "user_limit":
			out.UserLimit = int(in.Int())
		case "parent_id":
			out.ParentID = int64(in.Int64Str())
		case "rate_limit_per_user":
			out.RateLimitPerUser = int(in.Int())
		case "owner_id":
			out.OwnerID = int64(in.Int64())
		case "application_id":
			out.ApplicationID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo80(out *jwriter.Writer, in ChannelDelete) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"topic\":"
		out.RawString(prefix)
		out.String(string(in.Topic))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"last_message_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.LastMessageID))
	}
	{
		const prefix string = ",\"last_pin_timestamp\":"
		out.RawString(prefix)
		out.String(string(in.LastPinTimestamp))
	}
	{
		const prefix string = ",\"nsfw\":"
		out.RawString(prefix)
		out.Bool(bool(in.NSFW))
	}
	{
		const prefix string = ",\"icon\":"
		out.RawString(prefix)
		out.String(string(in.Icon))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.Int(int(in.Position))
	}
	{
		const prefix string = ",\"bitrate\":"
		out.RawString(prefix)
		out.Int(int(in.Bitrate))
	}
	{
		const prefix string = ",\"recipients\":"
		out.RawString(prefix)
		if in.Recipients == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v205, v206 := range in.Recipients {
				if v205 > 0 {
					out.RawByte(',')
				}
				if v206 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *v206)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"permission_overwrites\":"
		out.RawString(prefix)
		if in.PermissionOverwrites == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v207, v208 := range in.PermissionOverwrites {
				if v207 > 0 {
					out.RawByte(',')
				}
				if v208 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo33(out, *v208)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"user_limit\":"
		out.RawString(prefix)
		out.Int(int(in.UserLimit))
	}
	{
		const prefix string = ",\"parent_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ParentID))
	}
	{
		const prefix string = ",\"rate_limit_per_user\":"
		out.RawString(prefix)
		out.Int(int(in.RateLimitPerUser))
	}
	{
		const prefix string = ",\"owner_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.OwnerID))
	}
	{
		const prefix string = ",\"application_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.ApplicationID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChannelDelete) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo80(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChannelDelete) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo80(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChannelDelete) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo80(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChannelDelete) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo80(l, v)
}
func easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo81(in *jlexer.Lexer, out *ChannelCreate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Channel = new(Channel)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64Str())
		case "guild_id":
			out.GuildID = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "topic":
			out.Topic = string(in.String())
		case "type":
			out.Type = ChannelType(in.Int())
		case "last_message_id":
			out.LastMessageID = int64(in.Int64Str())
		case "last_pin_timestamp":
			out.LastPinTimestamp = Timestamp(in.String())
		case "nsfw":
			out.NSFW = bool(in.Bool())
		case "icon":
			out.Icon = string(in.String())
		case "position":
			out.Position = int(in.Int())
		case "bitrate":
			out.Bitrate = int(in.Int())
		case "recipients":
			if in.IsNull() {
				in.Skip()
				out.Recipients = nil
			} else {
				in.Delim('[')
				if out.Recipients == nil {
					if !in.IsDelim(']') {
						out.Recipients = make([]*User, 0, 8)
					} else {
						out.Recipients = []*User{}
					}
				} else {
					out.Recipients = (out.Recipients)[:0]
				}
				for !in.IsDelim(']') {
					var v209 *User
					if in.IsNull() {
						in.Skip()
						v209 = nil
					} else {
						if v209 == nil {
							v209 = new(User)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo10(in, v209)
					}
					out.Recipients = append(out.Recipients, v209)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "permission_overwrites":
			if in.IsNull() {
				in.Skip()
				out.PermissionOverwrites = nil
			} else {
				in.Delim('[')
				if out.PermissionOverwrites == nil {
					if !in.IsDelim(']') {
						out.PermissionOverwrites = make([]*PermissionOverwrite, 0, 8)
					} else {
						out.PermissionOverwrites = []*PermissionOverwrite{}
					}
				} else {
					out.PermissionOverwrites = (out.PermissionOverwrites)[:0]
				}
				for !in.IsDelim(']') {
					var v210 *PermissionOverwrite
					if in.IsNull() {
						in.Skip()
						v210 = nil
					} else {
						if v210 == nil {
							v210 = new(PermissionOverwrite)
						}
						easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo33(in, v210)
					}
					out.PermissionOverwrites = append(out.PermissionOverwrites, v210)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "user_limit":
			out.UserLimit = int(in.Int())
		case "parent_id":
			out.ParentID = int64(in.Int64Str())
		case "rate_limit_per_user":
			out.RateLimitPerUser = int(in.Int())
		case "owner_id":
			out.OwnerID = int64(in.Int64())
		case "application_id":
			out.ApplicationID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo81(out *jwriter.Writer, in ChannelCreate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.ID))
	}
	{
		const prefix string = ",\"guild_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.GuildID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"topic\":"
		out.RawString(prefix)
		out.String(string(in.Topic))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"last_message_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.LastMessageID))
	}
	{
		const prefix string = ",\"last_pin_timestamp\":"
		out.RawString(prefix)
		out.String(string(in.LastPinTimestamp))
	}
	{
		const prefix string = ",\"nsfw\":"
		out.RawString(prefix)
		out.Bool(bool(in.NSFW))
	}
	{
		const prefix string = ",\"icon\":"
		out.RawString(prefix)
		out.String(string(in.Icon))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.Int(int(in.Position))
	}
	{
		const prefix string = ",\"bitrate\":"
		out.RawString(prefix)
		out.Int(int(in.Bitrate))
	}
	{
		const prefix string = ",\"recipients\":"
		out.RawString(prefix)
		if in.Recipients == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v211, v212 := range in.Recipients {
				if v211 > 0 {
					out.RawByte(',')
				}
				if v212 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo10(out, *v212)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"permission_overwrites\":"
		out.RawString(prefix)
		if in.PermissionOverwrites == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v213, v214 := range in.PermissionOverwrites {
				if v213 > 0 {
					out.RawByte(',')
				}
				if v214 == nil {
					out.RawString("null")
				} else {
					easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo33(out, *v214)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"user_limit\":"
		out.RawString(prefix)
		out.Int(int(in.UserLimit))
	}
	{
		const prefix string = ",\"parent_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.ParentID))
	}
	{
		const prefix string = ",\"rate_limit_per_user\":"
		out.RawString(prefix)
		out.Int(int(in.RateLimitPerUser))
	}
	{
		const prefix string = ",\"owner_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.OwnerID))
	}
	{
		const prefix string = ",\"application_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.ApplicationID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChannelCreate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo81(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChannelCreate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson692db02bEncodeGithubComPedroPessoaTidbotPkgsDiscordgo81(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChannelCreate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo81(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChannelCreate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson692db02bDecodeGithubComPedroPessoaTidbotPkgsDiscordgo81(l, v)
}
